@model PPWLib.Models.Item.ReserveEditModel
@using PagedList.Mvc;
@{
	ViewBag.Title = Resources.Resource.ReserveItems;
	int rand = CommonHelper.GetVersionRandomNo();
	string primaryLocation = Model.PrimaryLocation;
}
<link href="~/Content/item/reserve.css?v=@rand" rel="stylesheet" type="text/css" />

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Index", "Reserve", FormMethod.Get, new { @Id = "frmReserve" }))
{
	@Html.Partial("_ItemPagesCheckBox", null, new ViewDataDictionary { { "reserve", true } })

	<div class="form-inline mb-2 my-4 clearfix">
		<div class="form-group">
			<input type="text" class="form-control" id="txtKeyword" name="Keyword" placeholder="@Resources.Resource.KeywordRequired" />
			<button id="btnSearch" type="button" class="btn btn-primary mx-1">@Resources.Resource.Search</button>
			<button id="btnReload" type="button" class="btn btn-warning mx-1">@Resources.Resource.Reload</button>
			<button id="btnList" type="button" class="btn btn-info mx-1" onclick="window.location.href = '/Reserve/List';">@Resources.Resource.List</button>
		</div>
	</div>


	<span class="small font-weight-bold"><span class="text-primary">@Resources.Resource.ReserveNumber:</span> <span id="riCode">@Model.ReserveNumber</span></span>


	<span class="mx-3 small font-weight-bold">
		<span class="text-success">@Resources.Resource.LastUpdateTime:</span>
		<span id="lastupdatetime">@Model.LastUpdateTime</span>
	</span>

	

	<table id="tblReserve" class="table table-bordered table-hover table-condensed overflow-auto" data-count="@Model.PagingItemList.Count">
		<thead class="gray-header">
			<tr class="">
				<th class="text-center colheader itemcode" data-col="0" data-keyword="@Model.Keyword">@Resources.Resource.ItemCode</th>
				<th class="text-center colheader itemdesc" data-col="1" data-keyword="@Model.Keyword">@Resources.Resource.Name/@Resources.Resource.Description</th>
				<th class="text-center colheader itemprice" data-col="2" data-keyword="@Model.Keyword">@Resources.Resource.SellingPrice (@Model.Currency)</th>
				<th class="text-center itemoptions">@Resources.Resource.Batch|@Resources.Resource.SerialNo|@Resources.Resource.ExpiryDate</th>
				<th class="text-center itemvari">@Resources.Resource.ItemVariations</th>

				<th class="text-right"><span class="font-weight-bold onhandstock">@Resources.Resource.OnHandStock</span></th>
				@foreach (var _shop in Model.ShopNames)
				{
					<th class="text-right locqty">@_shop</th>
				}
				<th class="text-right"><span class="font-weight-bold">@Resources.Resource.ReservedQty</span></th>
			</tr>
		</thead>
		@foreach (var item in Model.PagingItemList)
		{
			var namedesctxt = item.NameDesc.Length > 40 ? item.NameDesc.Substring(0, 40) + "..." : item.NameDesc;

			<tr>
				<td class="text-center itemcode" title="@item.itmCode">@item.itmCode</td>
				<td class="text-center itemdesc" data-desc="@item.NameDesc" title="@item.NameDesc">@namedesctxt</td>
				<td class="text-right itemprice">
					<input type="number" class="itemprice form-control btnsmall" value="@item.itmBaseSellingPrice" />
				</td>
				<td class="text-center itemoptions">@Html.Raw(item.ItemOptionsDisplay)</td>
				<td class="text-center itemvari">@Html.Raw(item.ItemVariationsDisplay)</td>


				<td class="text-right onhandstock">@item.QuantityAvailable</td>

				@foreach (var shop in Model.Shops)
				{
					int isprimary = primaryLocation == shop ? 1 : 0;
					int qty = 0;
					string Id = "";
					if (Model.DicCodeLocQty.ContainsKey(item.itmCode) && Model.DicCodeLocQty[item.itmCode].ContainsKey(shop))
					{
						qty = Model.DicCodeLocQty[item.itmCode][shop];
					}
					if (Model.DicCodeLocId.ContainsKey(item.itmCode) && Model.DicCodeLocId[item.itmCode].ContainsKey(shop))
					{
						Id = Model.DicCodeLocId[item.itmCode][shop];
					}
					<td class="text-right locqty">
						<input type="text" class="form-control text-right btnsmall locqty" data-id="@Id" data-isprimary="@isprimary" data-code="@item.itmCode" data-shop="@shop" data-onhandstock="@qty" data-oldval="@qty" data-itemid="@item.itmItemID" value="@qty" title="@qty">
					</td>
				}

				<td class="text-right">
					<input type="text" class="rilqty text-right btnsmall form-control" readonly value="0">
				</td>
			</tr>
		}
	</table>

	<div id="pagingblk" class="my-3">
		@Html.PagedListPager(Model.PagingItemList, PageNo => Url.Action("Index",
new { PageNo, SortCol = Model.SortCol, SortOrder = Model.SortOrder, Keyword = Model.Keyword }))
	</div>

	<input type="hidden" name="SortOrder" id="sortorder" value="@Model.SortOrder" />
	<input type="hidden" id="sortcol" value="@Model.SortCol" />
	<!--no "name" attr in propose!-->
}

@Html.Partial("_WaitingModal")

@Html.Partial("_DescModal")

@Html.Partial("_ReserveModal", null, new ViewDataDictionary { { "CustomerList", Model.CustomerList } })

@Html.AntiForgeryToken()

<div class="row justify-content-end mx-2">
	<button type="button" class="btn btn-success" id="btnReserve">@Resources.Resource.ReserveItems</button>
</div>

<div id="infoblk" data-shop="@Model.User.shopCode" data-shops="@string.Join(",",Model.Shops)" data-enablebuysellunits="@Model.EnableBuySellUnits" data-jsondiciditemoptions="@Model.JsonDicIDItemOptions" data-reserveitemqtyrequired="@Resources.Resource.ReserveItemQtyRequired"></div>


<script src="~/Scripts/ts/js/item/reserve/index.js?v=@rand"></script>


