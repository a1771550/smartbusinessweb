@model SBLib.Models.Item.ReserveEditModel
@using PagedList.Mvc;
@{
	int rand = CommonHelper.GetVersionRandomNo();
	var islistnull = Model.ReservePagingList == null;
	ViewBag.Title = string.Format(Resources.Resource.OrderFormat, Resources.Resource.Reserve);
}

<h2>@ViewBag.Title</h2>

@if (Model.ReservePagingList != null && Model.ReservePagingList.Count > 0)
{
	using (Html.BeginForm("List", "Reserve", FormMethod.Get, new { @Id = "frmReserveList" }))
	{
		<div class="form-inline my-4 clearfix">
			<div class="form-group">
				<input type="text" class="form-control" id="txtKeyword" name="Keyword" placeholder="@Resources.Resource.KeywordRequired" />
				<button id="btnSearch" type="button" class="btn btn-primary mx-1">@Resources.Resource.Search</button>
				<button id="btnReload" type="button" class="btn btn-warning mx-1">@Resources.Resource.Reload</button>
			</div>
		</div>

		<table id="tblReserveList" class="table table-bordered  table-hover table-condensed">

			<thead class="gray-header">
				<tr>
					<th class="text-center colheader" data-col="0">@Resources.Resource.ReserveNumber</th>
					<th class="text-center colheader" data-col="1">@Resources.Resource.Customer</th>
					<th class="text-center">@Resources.Resource.Item</th>
					<th class="text-center colheader" data-col="2">@Resources.Resource.Date</th>
					<th class="text-center">@Resources.Resource.Status</th>
					<th></th>
				</tr>
			</thead>

			@foreach (var item in Model.ReservePagingList)
			{
				string edittxt = item.PaidOut || item.Cancelled ? Resources.Resource.Detail : Resources.Resource.Edit;
				int _readonly = item.PaidOut || item.Cancelled ? 1 : 0;
				string disabled = item.PaidOut || item.Cancelled ? "disabled" : "";
				string statuscls = item.PaidOut ? "paidout" : item.Cancelled ? "cancelled" : "pending4payment";
				<tr>
					<td class="text-center">
						@item.riCode
					</td>
					<td class="text-center">
						@item.CustomerName
					</td>
					<td class="text-center">
						@item.ItemNames
					</td>
					<td class="text-center">
						@item.ReserveDateDisplay
					</td>
					<td class="text-center font-weight-bold @statuscls">
						@item.StatusDisplay
					</td>
					<td>
						<a class="btn btn-info edit mx-1" role="button" href="/Reserve/Edit?code=@item.riCode&readonly=@_readonly">@Resources.Resource.Edit</a>
						<a class="btn btn-primary paidout mx-1 @disabled" role="button" href="#" data-id="@item.Id" @disabled>@Resources.Resource.PayNow</a>
						<a class="btn btn-warning print mx-1" role="button" href="/Reserve/PrintByCode?code=@item.riCode" target="_blank">@Resources.Resource.Print</a>
						<a class="btn btn-danger cancel mx-1 @disabled" role="button" data-id="@item.Id" href="#" @disabled>@Resources.Resource.Cancel</a>
					</td>
				</tr>
			}

		</table>

		<div id="pagingblk" class="my-3">
			@Html.PagedListPager(Model.ReservePagingList, PageNo => Url.Action("Index",
		new { PageNo, SortCol = Model.SortCol, SortOrder = Model.CurrentSortOrder, Keyword = Model.Keyword }))
		</div>

		<input type="hidden" name="SortOrder" id="sortorder" value="@Model.SortOrder" />
		<input type="hidden" id="sortcol" value="@Model.SortCol" />
		<!--no "name" attr on purpose!-->
	}
}
else
{
	@Html.Partial("_NoRecordFound")
}

@Html.AntiForgeryToken()
@Html.Partial("_WaitingModal")

<div id="infoblk" data-confirmcanceltxt="@string.Format(Resources.Resource.ConfirmFormat, Resources.Resource.Cancel)"></div>
<script src="~/Scripts/ts/js/item/reserve/list.js?v=@rand"></script>




