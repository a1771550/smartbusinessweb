@model PPWLib.Models.POS.Sales.SalesEditModel
@{
	ViewBag.Title = Resources.Resource.Sales;
	int rand = new Random().Next(10000, 100000);
	bool enableEpay = (bool)Model.ComInfo.enableEpay;

	var currency = Model.Currency;
	bool showrecur = false;
	SessUser user = System.Web.HttpContext.Current.Session["User"] as SessUser;
	//bool isadmin = user.Roles.Any(x => x == RoleType.Admin);
	var Sales = Model.Sales;
	bool editmode = !string.IsNullOrEmpty(Model.Mode) && Model.Mode == "edit";
	string subtitle = Resources.Resource.MakeSales;

	if (Request.QueryString["type"] != null)
	{
		subtitle = string.Concat(subtitle, " (", Resources.Resource.Preorder, ")");
	}
}
<link rel="stylesheet" type="text/css" href="~/Content/pos/Sales.css?v=@rand" />
<h3>@subtitle</h3>

@if (showrecur)
{
	<div class="row justify-content-start my-4">
		<div class="col-12 col-md-2">
			<button type="button" id="btnUseRecur" class="btn btn-outline-info">@Resources.Resource.UseRecurring</button>
		</div>

	</div>
}

@Html.Partial("_SalesBlk", null, new ViewDataDictionary { { "Currency", Model.Currency }, { "rtsCurrency", Sales.rtsCurrency }, { "LocationList", Model.LocationList }, { "showrecur", showrecur }, { "Device", Model.ComInfo.Device }, { "Devices", Model.ComInfo.Devices },{"NextSalesCode",Model.NextSalesCode },{ "DefaultSalesNotesTxt",Model.DefaultSalesNotesTxt } })

<input type="hidden" id="rtsExRate" value="@Sales.rtsExRate" />

@Html.Partial("_CurrencyModal")

@Html.Partial("_ItemModal", null, new ViewDataDictionary { { "currency", Model.Currency }, { "priceheader", Resources.Resource.SellingPrice }, { "forsales", true } })

@Html.Partial("_DescModal")

@Html.Partial("_CusModal")

@Html.Partial("_BatchModal")

@Html.Partial("_SerialNoModal", null, new ViewDataDictionary { { "forsales", true } })

@Html.Partial("_ValidThruModal")

@Html.Partial("_PayModal", null, new ViewDataDictionary { { "forsales", true }, { "enableEpay", enableEpay }, { "PaymentTypes", Model.PaymentTypes }, { "DicPayTypes", Model.DicPayTypes } })

@Html.Partial("_ItemVariModal")

@Html.Partial("_ChangeModal")

@Html.Partial("_WaitingModal")


<div id="infoblk" data-currency="@Model.Currency" data-priceeditable="@Model.PriceEditable" data-disceditable="@Model.DiscEditable" data-enabletax="@Model.TaxModel.EnableTax" data-enablelogo="@Model.EnableLogo" data-inclusivetaxrate="@Model.TaxModel.TaxRate" data-accountprofileid="@Model.AccountProfileId" data-checkoutportal="@ViewBag.DefaultCheckoutPortal.ToLower()" data-salesmanrequiredtxt="@string.Format(Resources.Resource.PleaseFormat,string.Format(Resources.Resource.SelectFormat,Resources.Resource.SalesPerson))" data-jsondiclocation="@Model.JsonDicLocation" data-jsondicbattotalqty="@JsonSerializer.Serialize(Model.DicBatTotalQty)" data-cominfo="@JsonSerializer.Serialize(Model.ComInfo)" data-dicitemsns="@JsonSerializer.Serialize(Model.DicItemSNs)" data-dicitemoptions="@JsonSerializer.Serialize(Model.DicItemOptions)" data-jsonpoitembatvqlist="@JsonSerializer.Serialize(Model.PoItemBatVQList)" data-jsondicitembatsnvtlist="@JsonSerializer.Serialize(Model.DicItemBatSnVtList)" data-jsondicitemvtqtylist="@JsonSerializer.Serialize(Model.DicItemVtQtyList)" data-jsondicitembatchqty="@JsonSerializer.Serialize(Model.DicItemBatchQty)" data-jsondicitemsnvtlist="@JsonSerializer.Serialize(Model.DicItemSnVtList)" data-jsondicitembatdelqty="@JsonSerializer.Serialize(Model.DicItemBatDelQty)" data-jsondicitemvtdelqtylist="@JsonSerializer.Serialize(Model.DicItemVtDelQtyList)" data-jsondicseqdeliveryitems="@JsonSerializer.Serialize(Model.DicSeqDeliveryItems)" data-jsondicitembatsnvt="@JsonSerializer.Serialize(Model.DicItemBatSnVt)" data-jsonpoivinfo="@JsonSerializer.Serialize(Model.PoIvInfo)" data-jsondicivinfo="@JsonSerializer.Serialize(Model.DicIvInfo)" data-dicitemgroupedvariations="@JsonSerializer.Serialize(Model.DicItemGroupedVariations)" data-dicivqtylist="@JsonSerializer.Serialize(Model.DicIvQtyList)" data-dicivdelqtylist="@JsonSerializer.Serialize(Model.DicIvDelQtyList)"></div>



<script src="~/Scripts/ts/js/pos/advsales.js?v=@rand"></script>
