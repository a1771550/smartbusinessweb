@model PPWLib.Models.POS.Sales.SalesEditModel
@{
	bool forreserve = Model.ReserveLnList != null;
	ViewBag.Title = forreserve ? Resources.Resource.PaidOut4Reserve : Resources.Resource.MakeSales;
	int rand = new Random().Next(10000, 100000);


	bool enableEpay = (bool)Model.ComInfo.enableEpay;

	var currency = Model.Currency;
	bool showrecur = false;
	SessUser user = System.Web.HttpContext.Current.Session["User"] as SessUser;	
	var Sales = Model.Sales;
	bool editmode = !string.IsNullOrEmpty(Model.Mode) && Model.Mode == "edit";
	string subtitle = Resources.Resource.MakeSales;

	if (Request.QueryString["type"] != null)
	{
		ViewBag.Title = string.Concat(subtitle, " (", Resources.Resource.Preorder, ")");
	}
}
<link rel="stylesheet" type="text/css" href="~/Content/pos/Sales.css?v=@rand" />
<link rel="stylesheet" type="text/css" href="~/Content/pos/advsales.css?v=@rand" />
<h3 class="clearfix">
	@ViewBag.Title
	<span class="small60 d-inline-block float-right">@Resources.Resource.InvoiceNo <span class="badge badge-dark">@Model.Sales.rtsCode</span></span>
</h3>
<input type="hidden" id="rtsCode" value="@Model.Sales.rtsCode" />

@if (showrecur)
{
	<div class="row justify-content-start my-4">
		<div class="col-12 col-md-2">
			<button type="button" id="btnUseRecur" class="btn btn-outline-info">@Resources.Resource.UseRecurring</button>
		</div>
	</div>
}

@if (forreserve)
{
	@Html.Partial("_SalesBlk", null, new ViewDataDictionary { { "Currency", Model.Currency }, { "rtsCurrency", Sales.rtsCurrency }, { "LocationList", Model.LocationList }, { "JobList", Model.JobList }, { "showrecur", showrecur }, { "Device", Model.ComInfo.Device }, { "Devices", Model.ComInfo.Devices }, { "NextSalesCode", Model.Sales.rtsCode }, { "DefaultSalesNotesTxt", Model.DefaultSalesNotesTxt }, { "SalesLnList", Model.SalesLnList }, { "SelectedCustomer", Model.SelectedCustomer } })
}
else
{
	@Html.Partial("_SalesBlk", null, new ViewDataDictionary { { "Currency", Model.Currency }, { "rtsCurrency", Sales.rtsCurrency }, { "LocationList", Model.LocationList }, { "JobList", Model.JobList }, { "showrecur", showrecur }, { "Device", Model.ComInfo.Device }, { "Devices", Model.ComInfo.Devices }, { "NextSalesCode", Model.Sales.rtsCode }, { "DefaultSalesNotesTxt", Model.DefaultSalesNotesTxt } })
}



<input type="hidden" id="rtsExRate" value="@Sales.rtsExRate" />

@Html.Partial("_CurrencyModal")

@Html.Partial("_ItemModal", null, new ViewDataDictionary { { "currency", Model.Currency }, { "priceheader", Resources.Resource.SellingPrice }, { "forsales", true } })

@Html.Partial("_DescModal")

@Html.Partial("_CusModal")

@Html.Partial("_BatchModal")

@Html.Partial("_SerialNoModal", null, new ViewDataDictionary { { "forsales", true } })

@Html.Partial("_ValidThruModal")

@Html.Partial("_PayModal", null, new ViewDataDictionary { { "forsales", true }, { "enableEpay", enableEpay }, { "PaymentTypes", Model.PaymentTypes }, { "DicPayTypes", Model.DicPayTypes },{"DicPayServiceCharge",Model.DicPayServiceCharge } })

@Html.Partial("_ItemVariModal")

@Html.Partial("_ChangeModal")

@Html.Partial("_WaitingModal")


<div id="infoblk" data-currency="@Model.Currency" data-priceeditable="@Model.PriceEditable" data-disceditable="@Model.DiscEditable" data-enabletax="@Model.TaxModel.EnableTax" data-salesmanrequiredtxt="@string.Format(Resources.Resource.PleaseFormat,string.Format(Resources.Resource.SelectFormat,Resources.Resource.SalesPerson))" data-jsondiclocation="@Model.JsonDicLocation" data-jsondicbattotalqty="@JsonSerializer.Serialize(Model.DicBatTotalQty)" data-cominfo="@JsonSerializer.Serialize(Model.ComInfo)" data-dicitemsns="@JsonSerializer.Serialize(Model.DicItemSNs)" data-dicitemoptions="@JsonSerializer.Serialize(Model.DicItemOptions)" data-jsonpoitembatvqlist="@JsonSerializer.Serialize(Model.PoItemBatVQList)" data-jsondicitembatsnvtlist="@JsonSerializer.Serialize(Model.DicItemBatSnVtList)" data-jsondicitemvtqtylist="@JsonSerializer.Serialize(Model.DicItemVtQtyList)" data-jsondicitembatchqty="@JsonSerializer.Serialize(Model.DicItemBatchQty)" data-jsondicitemsnvtlist="@JsonSerializer.Serialize(Model.DicItemSnVtList)" data-jsondicitembatdelqty="@JsonSerializer.Serialize(Model.DicItemBatDelQty)" data-jsondicitemvtdelqtylist="@JsonSerializer.Serialize(Model.DicItemVtDelQtyList)" data-jsondicseqdeliveryitems="@JsonSerializer.Serialize(Model.DicSeqDeliveryItems)" data-jsondicitembatsnvt="@JsonSerializer.Serialize(Model.DicItemBatSnVt)" data-jsonpoivinfo="@JsonSerializer.Serialize(Model.PoIvInfo)" data-jsondicivinfo="@JsonSerializer.Serialize(Model.DicIvInfo)" data-dicitemgroupedvariations="@JsonSerializer.Serialize(Model.DicItemGroupedVariations)" data-dicivqtylist="@JsonSerializer.Serialize(Model.DicIvQtyList)" data-dicivdelqtylist="@JsonSerializer.Serialize(Model.DicIvDelQtyList)" data-sales="@JsonSerializer.Serialize(Model.Sales)" data-saleslnlist="@JsonSerializer.Serialize(Model.SalesLnList)" data-itemlist="@JsonSerializer.Serialize(Model.ItemList)" data-diccurrencyexrate="@JsonSerializer.Serialize(Model.DicCurrencyExRate)" data-dicpayservicecharge="@JsonSerializer.Serialize(Model.DicPayServiceCharge)" data-defaultcustomer="@JsonSerializer.Serialize(Model.DefaultCustomer)" data-jsonjoblist="@JsonSerializer.Serialize(Model.JobList)"></div>



<script src="~/Scripts/ts/js/pos/advsales.js?v=@rand"></script>
