@model PPWLib.Models.POS.Sales.SalesOrderEditModel
@using PagedList.Mvc;
@{
    ViewBag.Title = string.Format(Resources.Resource.ListFormat, Resources.Resource.SalesOrder);
    var rand = CommonHelper.GetVersionRandomNo();
    SessUser user = HttpContext.Current.Session["User"] as SessUser;
    bool isapprover = user.Roles.Any(x => x == RoleType.Admin || x == RoleType.SalesManager);
    bool isadmin = user.Roles.Any(x => x == RoleType.Admin && x != RoleType.SalesManager);
    bool ismanager = user.Roles.Any(x => x == RoleType.SalesManager);
    bool issalesperson = user.Roles.Any(x => x != RoleType.Admin && x != RoleType.SalesManager);
}
<link href="~/Scripts/paginationjs/pagination.css" rel="stylesheet" type="text/css" />

<h3>@ViewBag.Title</h3>

@if (Model.PagingSalesOrderList == null || Model.PagingSalesOrderList.Count == 0)
{
    <div class="alert alert-info" id="norecordfound">@Resources.Resource.NoDataFound</div>
}
else
{
    <div class="container" data-count="@Model.PagingSalesOrderList.Count">
        @using (Html.BeginForm("SalesOrderList", "POSFunc", FormMethod.Get, new { @Id = "frmSalesOrderList" }))
        {
            var _salespersonchecked = "";
            var _salesorderchecked = "";
            var _itemchecked = "";
            var _customerchecked = "";
            var _itemoptionschecked = "";
            if (!string.IsNullOrEmpty(Model.Keyword))
            {
                var arrSearchMode = Model.SearchModeList.Split(',');
                _salespersonchecked = arrSearchMode.Contains("0") ? "checked" : "";
                _salesorderchecked = arrSearchMode.Contains("1") ? "checked" : "";
                _itemchecked = arrSearchMode.Contains("2") ? "checked" : "";
                _customerchecked = arrSearchMode.Contains("3") ? "checked" : "";
                _itemoptionschecked = arrSearchMode.Contains("4") ? "checked" : "";
            }

            var hidechksales = isapprover ? "" : "hide";

            <div class="d-flex justify-content-center my-4">

                <input type="text" class="form-control mr-2" id="txtKeyword" name="Keyword" value="@Model.Keyword" placeholder="@Resources.Resource.KeywordRequired" />


                <div class="form-check form-check-inline small @hidechksales">
                    <input class="form-check-input searchmode" type="checkbox" id="chkSalesPerson" value="0" @_salespersonchecked>
                    <label class="form-check-label" for="chkSalesPerson">@Resources.Resource.SalesPerson</label>
                </div>


                <div class="form-check form-check-inline small">
                    <input class="form-check-input searchmode" type="checkbox" id="chkSalesOrder" value="1" @_salesorderchecked>
                    <label class="form-check-label" for="chkSalesOrder">@Resources.Resource.SalesOrder</label>
                </div>
                <div class="form-check form-check-inline small">
                    <input class="form-check-input searchmode" type="checkbox" id="chkItem" value="2" @_itemchecked>
                    <label class="form-check-label" for="chkItem">@Resources.Resource.Item</label>
                </div>
                <div class="form-check form-check-inline small">
                    <input class="form-check-input searchmode" type="checkbox" id="chkCustomer" value="3" @_customerchecked>
                    <label class="form-check-label" for="chkCustomer">@Resources.Resource.Customer</label>
                </div>

                <div class="form-check form-check-inline small">
                    <input class="form-check-input searchmode" type="checkbox" id="chkItemOptions" value="4" @_itemoptionschecked>
                    <label class="form-check-label" for="chkItemOptions">@Resources.Resource.ItemOptions</label>
                </div>

                <input type="hidden" id="searchmode" name="searchmode" value="@Model.SearchModeList" />
            </div>
            <div class="row justify-content-center py-3 mb-2">
                @Html.Partial("_DatesRange", null, new ViewDataDictionary { { "DateFromTxt", Model.DateFromTxt }, { "DateToTxt", Model.DateToTxt } })
            </div>

            <div class="row justify-content-center mb-2">
                <button id="btnFilter" type="button" name="filter" value="1" class="btn btn-success mr-sm-3">@Resources.Resource.Submit</button>
                <button id="btnReload" type="button" role="button" class="btn btn-warning">@Resources.Resource.Reload</button>
            </div>

            <input type="hidden" id="sortorder" name="SortOrder" value="@Model.SortOrder" />
            <input type="hidden" id="sortname" name="SortName" value="@Model.SortName" />
            <input type="hidden" id="currentsortorder" value="@Model.CurrentSortOrder" />

        }
    </div>

    <div id="tblblk" class="py-3" data-count="@Model.PagingSalesOrderList.Count" style="overflow-x:scroll;">
        <table id="tblsalesorder" class="table table-bordered table-striped table-hover table-condensed">
            <thead class="gray-header">
                <tr>
                    <th class="text-left colheader" data-col="0" data-order="@Model.SortOrder" data-keyword="@Model.Keyword" data-category="rtsCode">
                        @Resources.Resource.InvoiceNo
                    </th>
                    <th class="text-left colheader" data-col="1" data-order="@Model.SortOrder" data-keyword="@Model.Keyword" data-category="SalesName">
                        @Resources.Resource.SalesPerson
                    </th>
                    <th class="text-left colheader" data-col="2" data-order="@Model.SortOrder" data-keyword="@Model.Keyword" data-category="CusName">
                        @Resources.Resource.Customer
                    </th>
                    @*<th class="text-left" data-keyword="@Model.Keyword">
                        @Resources.Resource.ItemOptionsHeader
                    </th>*@
                    <th class="text-left">
                        @Resources.Resource.Remark
                    </th>
                    @*<th class="text-center">
                        @Resources.Resource.PurchaseOrder
                    </th>
                    <th class="text-left colheader" data-col="3" data-order="@Model.SortOrder" data-keyword="@Model.Keyword" data-category="rtsStatus">
                        @Resources.Resource.Status
                    </th>*@
                    <th class="text-center colheader" data-col="4" data-order="@Model.SortOrder" data-keyword="@Model.Keyword" data-category="rtsTime">@Resources.Resource.InvoiceTime</th>
                    @*<th class="text-center colheader" data-col="5" data-order="@Model.SortOrder" data-keyword="@Model.Keyword" data-category="rtsDeliveryDate">@Resources.Resource.DeliveryDate</th>*@
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.PagingSalesOrderList)
                {
                    string bgclr = "";
                    string approvedisabled = "";
                    string rejectdisabled = "";
                    string voiddisabled = "";
                    string passdisabled = "";
                    string btncls = item.rtsType == "RS" ? "" : "disabled";
                    string statustxt = "";
                    string _readonly = "1";

                    if (item.rtsStatus.ToUpper() == "REQUESTING" && item?.rtsSpecialApproval != null && (bool)item?.rtsSpecialApproval)
                    {
                        bgclr = "requesting_sp_statusbg";
                        statustxt = "特批申請中";
                        _readonly = "0";
                    }
                    else
                    {
                        switch (item.rtsStatus.ToUpper())
                        {
                            case "VOIDED":
                                bgclr = "voidedstatusbg";
                                voiddisabled = "disabled";
                                statustxt = "廢單";
                                break;
                            case "PASSED":
                                bgclr = "passedstatusbg";
                                passdisabled = "disabled";
                                statustxt = "經理待批";
                                break;
                            case "APPROVED":
                            case "CREATED":
                                bgclr = item?.rtsSpecialApproval != null && (bool)item?.rtsSpecialApproval ? "approved_sp_statusbg" : "approvedstatusbg";
                                approvedisabled = "disabled";
                                rejectdisabled = "disabled";
                                //voiddisabled = "disabled";
                                passdisabled = "disabled";
                                statustxt = item?.rtsSpecialApproval != null && (bool)item?.rtsSpecialApproval ? "特批已批核" : "已批核";
                                break;
                            case "REJECTED":
                                bgclr = "rejectedstatusbg";
                                rejectdisabled = "disabled";
                                statustxt = "拒絕";
                                _readonly = isapprover ? "1" : "0";
                                break;
                            case "KPENDING":
                                bgclr = "kpendingstatusbg";
                                //statustxt = "期貨單";
                                statustxt = "申請中";
                                break;
                            default:
                            case "REQUESTING":
                                bgclr = "requestingstatusbg";
                                statustxt = "申請中";
                                _readonly = isapprover ? "1" : "0";
                                break;
                        }
                    }


                    var itemoptionsdisplay = "";
                    if (!string.IsNullOrEmpty(item.rtlBatch) && !string.IsNullOrEmpty(item.rtlSn) && !string.IsNullOrEmpty(item.rtlValidThru))
                    {
                        itemoptionsdisplay = string.Concat(item.rtlBatch, " | ", item.rtlSn, " | ", item.rtlValidThru);
                    }
                    if (!string.IsNullOrEmpty(item.rtlBatch) && !string.IsNullOrEmpty(item.rtlSn) && string.IsNullOrEmpty(item.rtlValidThru))
                    {
                        itemoptionsdisplay = string.Concat(item.rtlBatch, " | ", item.rtlSn);
                    }
                    if (!string.IsNullOrEmpty(item.rtlBatch) && string.IsNullOrEmpty(item.rtlSn) && !string.IsNullOrEmpty(item.rtlValidThru))
                    {
                        itemoptionsdisplay = string.Concat(item.rtlBatch, " | ", item.rtlValidThru);
                    }
                    if (string.IsNullOrEmpty(item.rtlBatch) && !string.IsNullOrEmpty(item.rtlSn) && !string.IsNullOrEmpty(item.rtlValidThru))
                    {
                        itemoptionsdisplay = string.Concat(item.rtlSn, " | ", item.rtlValidThru);
                    }
                    if (string.IsNullOrEmpty(item.rtlBatch) && string.IsNullOrEmpty(item.rtlSn) && !string.IsNullOrEmpty(item.rtlValidThru))
                    {
                        itemoptionsdisplay = item.rtlValidThru;
                    }

					<tr data-code="@item.rtsCode" data-sp="@item.rtsSpecialApproval" data-status="@item.rtsStatus">
						<td>
							@item.rtsCode
						</td>
						<td>@item.SalesPersonName</td>
						<td class="customer" data-code="@item.Customer.cusCode" data-name="@item.Customer.cusName">@item.Customer.cusName</td>
						@*<td data-bat="@item.rtlBatch" data-hassn="@item.rtlHasSn" data-sn="@item.rtlSn" data-vt="@item.rtlValidThru">@itemoptionsdisplay</td>*@
						@{
							var remark = item.rtsRmks != null && item.rtsRmks.Length > 20 ? string.Concat(item.rtsRmks.Substring(0, 20), "...") : item.rtsRmks ?? "";
						}

						<td style="width:150px;max-width:150px;" data-remark="@item.rtsRmks" class="remark">@remark</td>
						@*<td>@item.rtsCustomerPO</td>
		<td class="@bgclr">
			@statustxt
		</td>*@
						<td class="text-center">@item.SalesTimeDisplay</td>
						@*<td data-date="@item.rtsDeliveryDate">@item.DeliveryDateDisplay</td>*@
						<td class="button">

							@if (isapprover)
							{
								<button class="btn btn-info detail mr-2 @btncls" data-id="@item.rtsUID" data-code="@item.rtsCode" data-readonly="@_readonly" data-mode="review" data-status="@item.rtsStatus">@Resources.Resource.Detail</button>
								<button class="btn btn-secondary copy mr-2 @btncls" data-id="@item.rtsUID">@Resources.Resource.Copy</button>

								if (!ismanager)
								{
									<button class="btn btn-primary respond mr-2 @approvedisabled" data-type="approve" data-id="@item.rtsUID" data-code="@item.rtsCode">@Resources.Resource.Approve</button>
									<button class="btn btn-danger respond mr-2 @rejectdisabled" data-type="reject" data-id="@item.rtsUID" data-code="@item.rtsCode">@Resources.Resource.Reject</button>
									<button class="btn btn-warning respond mr-2 @passdisabled" data-type="pass" data-id="@item.rtsUID" data-code="@item.rtsCode">@Resources.Resource.PassToManager</button>
								}

								<button class="btn btn-outline-danger respond void @voiddisabled" data-type="void" data-id="@item.rtsUID" data-code="@item.rtsCode">@Resources.Resource.Void4Order</button>
							}
							else
							{
								string edittxt = _readonly == "" ? Resources.Resource.Edit : Resources.Resource.Detail;
								string mode = (item.rtsStatus == "CREATED" || item.rtsStatus == "APPROVED") ? "created" : item.rtsStatus == "VOIDED" ? "readonly" : "edit";
								<button class="btn btn-info edit mr-2" data-id="@item.rtsUID" data-code="@item.rtsCode" data-readonly="@_readonly" data-mode="@mode" data-status="@item.rtsStatus">@edittxt</button>
								@*<button class="btn btn-primary whatsapp mr-2" data-id="@item.rtsUID" data-code="@item.rtsCode"><span class="small">@Resources.Resource.ResendWhatsAppMsg</span></button>*@
							}



						</td>
					</tr>
                }
            </tbody>
        </table>
        <div id="pagingblk" class="mx-3">
            <div class="row">
                @Html.PagedListPager(Model.PagingSalesOrderList, PageNo => Url.Action("SalesOrderList",
        new { PageNo, SortOrder = Model.SortOrder, SortName = Model.SortName, Keyword = Model.Keyword, strfrmdate = Model.DateFromTxt, strtodate = Model.DateToTxt }))
            </div>
        </div>
    </div>
    @Html.AntiForgeryToken()
}

@Html.Partial("_RecurOrderModal", null, new ViewDataDictionary { { "currency", ConfigurationManager.AppSettings["Currency"] } })

@Html.Partial("_WhatsAppLinkModal")

@Html.Partial("_TextAreaModal")

@Html.Partial("_WaitingModal")

<div id="infoblk" class="hide" data-apid="@ConfigurationManager.AppSettings["AccountProfileId"]" data-approvedmsg="@Resources.Resource.ApprovedInvoiceMsgFormat" data-rejectedmsg="@Resources.Resource.RejectedInvoiceMsgFormat" data-whatsapplinkurl="@ConfigurationManager.AppSettings["WhatsappLinkUrl"]" data-usercode="@user.UserCode" data-isapprover="@isapprover"></div>

<script type="text/javascript" src="~/Scripts/daterangepicker/moment.min.js"></script>
<script type="text/javascript" src="~/Scripts/daterangepicker/daterangepicker.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/Scripts/daterangepicker/daterangepicker.css" />

<script src="~/Scripts/paginationjs/pagination.js"></script>

<script>
    $(function () {
        initDatePickers(StartDayEnum.LastMonthToday, 'YYYY-MM-DD');
    });
</script>

<script src="~/Scripts/ts/js/pos/salesorderlist.js?v=@rand"></script>


