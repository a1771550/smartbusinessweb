@model StockEditModel
@using PagedList.Mvc;
@{
	ViewBag.Title = Resources.Resource.Stock;
	int rand = CommonHelper.GetVersionRandomNo();
	SessUser user = Model.User;
	var shop = user.shopCode ?? Model.ComInfo.Shop;
	var device = user.dvcCode ?? Model.ComInfo.Device;
}
<link rel="stylesheet" href="~/Content/item/stock.css?v=@rand" />
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Stock", "Item", FormMethod.Get, new { @Id = "frmStock" }))
{
	@Html.Partial("_ItemPagesCheckBox", null, new ViewDataDictionary { { "stock", true } })

	<div class="form-inline my-4">
		<div class="form-group">
			<input type="text" class="form-control" id="txtKeyword" name="Keyword" placeholder="@Resources.Resource.EnterItemCodeName" />
			<button id="btnSearch" type="button" class="btn btn-primary ml-4">@Resources.Resource.Search</button>
			<button id="btnReload" type="button" class="btn btn-warning ml-4">@Resources.Resource.Reload</button>
			<a href="/Item/Edit?itemId=0&referrer=stock" role="button" class="btn btn-info ml-4">@string.Format(Resources.Resource.NewFormat, Resources.Resource.Item)</a>
		</div>
	</div>

	<div class="d-flex small">
		@Html.Partial("_ItemOptionsBlk", null, new ViewDataDictionary { { "showSaveBtn", true } })
	</div>

	<span class="font-weight-bold small">
		<span class="text-success">@Resources.Resource.LastUpdateTime:</span>
		<span id="lastupdatetime">@Model.LastUpdateTime</span>
		<span class="d-inline-block ml-4 mr-2 font-weight-bold">@Resources.Resource.Note:</span><span class="text-info">@Resources.Resource.AbssStockQtyNote</span>
	</span>

	<table id="tblStock" class="table table-bordered table-hover table-condensed">
		<thead class="gray-header">
			<tr class="">
				<th><input id="chkall" type="checkbox" class="form-check" /></th>
				<th class="text-left colheader itemcode" data-col="code">@Resources.Resource.ItemCode <span class="small font-weight-bold"></span></th>
				<th class="text-left colheader itemdesc" data-col="namedesc">@Resources.Resource.Name/@Resources.Resource.Description</th>
				<th class="text-center itemoptions">@Resources.Resource.Batch|@Resources.Resource.SerialNo|@Resources.Resource.ExpiryDate</th>
				<th class="text-center itemvari">@Resources.Resource.ItemVariations</th>

				<th class="text-right colheader font-weight-bold onhandstock qty">@Resources.Resource.OnHandStock</th>
				@foreach (var _shop in Model.ShopNames)
				{
					<th class="text-right">@_shop.Trim()</th>
				}
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model.PagingItemList)
			{
				var itemcode = item.itmCode;
				var trcls = Model.EnableBuySellUnits ? "button" : "";
				var ondblclick = Model.EnableBuySellUnits ? $"HandleStockDblClick(\"{itemcode}\");" : "";
				var itemoption = Model.DicItemOptions[itemcode];
				var fabatcls = itemoption != null ? itemoption.ChkBatch ? "check-square" : "square-o" : "square-o";
				var fasncls = itemoption != null ? itemoption.ChkSN ? "check-square" : "square-o" : "square-o";
				var favtcls = itemoption != null ? itemoption.WillExpire ? "check-square" : "square-o" : "square-o";
				var facls = item.hasItemVari ? "check" : "xmark";
				var displaycls = item.hasItemVari ? "text-success" : "text-danger";
				var onhandstock = item.OnHandStock <= 0 ? Html.Raw($"<span class=\"outofstock\">{item.OnHandStock}</span>") : Html.Raw(item.OnHandStock.ToString());
				var diclocqty = Model.DicItemLocQty[itemcode];
				var dicabssqty = Model.DicItemAbssQty[itemcode];


				<tr class="@trcls" data-code="@itemcode" data-jsstocklist="@item.JsonJsStockList" ondblclick="@ondblclick">
					<td><input type="checkbox" class="form-check chk" data-id="@item.itmItemID" data-code="@itemcode"></td>

					<td class="text-left">@itemcode</td>

					<td class="text-left itemdesc" data-desc="@item.NameDesc" title="@item.NameDesc">@item.NameDescDisplay</td>
					<td class="text-center"><span class="text-success"><span class="fa fa-@fabatcls"></span> <span class="fa fa-@fasncls"></span> <span class="fa fa-@favtcls"></span></span></td>

					<td class="text-center"><span class="fa fa-@facls @displaycls"></span></td>

					<td class="text-right locqty">@onhandstock</td>

					@foreach (var e in Model.Shops)
					{
						var locqty = diclocqty.ContainsKey(e) ? diclocqty[e] : 0;
						var abssqty = dicabssqty.ContainsKey(e) ? dicabssqty[e] : 0;
						var locqtydisplay = "";
						var isprimary = Model.PrimaryLocation == e ? 1 : 0;

						if (locqty <= 0)
						{
							locqtydisplay = $"<span class=\"danger\">{locqty}</span>";
						}
						else
						{
							locqtydisplay = $"<span>{locqty}</span>";
						}

						var inputcls = !itemoption.ChkBatch && !itemoption.ChkSN && !itemoption.WillExpire ? "locqty" : "locqty itemoption";
						if (Model.DicIvInfo.ContainsKey(itemcode) && Model.DicIvInfo[itemcode].Count > 0 && !itemoption.ChkBatch && !itemoption.ChkSN &&
						!itemoption.WillExpire)
						{
							inputcls = "locqty vari";
						}

						<td class="text-right locqty">@Html.Raw(locqtydisplay)</td>

					}

					<td><button class="btn btn-info edit btnsmall" type="button" data-id="@item.itmItemID" onclick="editItem(@item.itmItemID);">@Resources.Resource.Edit</button></td>
				</tr>
			}


		</tbody>

	</table>

	<div id="pagingblk" class="my-3">
		@Html.PagedListPager(Model.PagingItemList, PageNo => Url.Action("Stock",
new { PageNo, SortName = Model.SortName, SortOrder = Model.CurrentSortOrder, Keyword = Model.Keyword }))
	</div>

	@Html.Partial("_SortOrderNameHidden")
}

@Html.Partial("_WaitingModal")
@Html.Partial("_DescModal")
@Html.AntiForgeryToken()
<div id="infoblk" data-shop="@user.shopCode" data-shops="@string.Join(",",Model.Shops)" data-enablebuysellunits="@Model.EnableBuySellUnits" data-idlist="@string.Join(",",Model.ItemIdList)" data-jsondiccodeitemoptions="@JsonSerializer.Serialize(Model.DicCodeItemOptions)" data-referrer="stock"></div>

<script src="~/Scripts/ASPSnippets_Pager.min.js"></script>
<script src="~/Scripts/ts/js/item/stock.js?v=@rand"></script>

