@{
    List<string> Shops = ViewData["Shops"] != null ? (List<string>)ViewData["Shops"] : new List<string>();   
    List<ItemAttribute> ItemAttrList = ViewData["ItemAttrList"] == null ? null : ViewData["ItemAttrList"] as List<ItemAttribute>;

   
    SBLib.Models.Item.ItemModel Item = ViewData["Item"] == null ? null : ViewData["Item"] as ItemModel;

    string Currency = ViewData["Currency"] as string;

    bool editmode = Convert.ToBoolean(ViewData["editmode"]);

    string frmname =  "Item";
    string frmId =  "frmItem";
    int lang = Convert.ToInt32(ViewData["lang"]);
    bool EnableBuySellUnits = Convert.ToBoolean(ViewData["EnableBuySellUnits"]);
    List<SBLib.Models.MYOB.AccountModel> ACList = ViewData["ACList"] as List<SBLib.Models.MYOB.AccountModel>;
    bool nonabss = Convert.ToBoolean(ViewData["nonabss"]);
    int AccountProfileId = Convert.ToInt32(ViewData["AccountProfileId"]);
    int MaxCodeLength = Convert.ToInt32(ViewData["MaxCodeLength"]);
    int MaxNameLength = Convert.ToInt32(ViewData["MaxNameLength"]);

    HashSet<CategoryModel> CategoryList = ViewData["CategoryList"] as HashSet<CategoryModel>;
    bool EditItem = Convert.ToBoolean(ViewData["EditItem"]);

    string _readonly = editmode ? "readonly" : "";
}

@using (Html.BeginForm("Edit", frmname, FormMethod.Post, new { @Id = frmId }))
{
    @Html.AntiForgeryToken()

    if (editmode)
    {
        if (ItemAttrList != null)
        {           
            @Html.Partial("__ItemEditForm", null, new ViewDataDictionary { { "ItemAttrList", ItemAttrList }, { "Item", Item }, { "editmode", editmode }, { "readonly", _readonly }, { "nonabss", nonabss }, { "apId", AccountProfileId }, { "maxcodelength", MaxCodeLength }, { "maxnamelength", MaxNameLength }, { "currency", Currency }, { "lang", lang }, { "ACList", ACList }, { "EnableBuySellUnits", EnableBuySellUnits }, { "CategoryList", CategoryList }, { "EditItem", EditItem } })


        }
        else
        {            
            @Html.Partial("__ItemEditForm", null, new ViewDataDictionary { { "Item", Item }, { "editmode", editmode }, { "readonly", _readonly }, { "nonabss", nonabss }, { "apId", AccountProfileId }, { "maxcodelength", MaxCodeLength }, { "maxnamelength", MaxNameLength }, { "currency", Currency }, { "lang", lang }, { "ACList", ACList }, { "EnableBuySellUnits", EnableBuySellUnits }, { "CategoryList", CategoryList }, { "EditItem", EditItem } })
        }
    }
    else
    {
        @Html.Partial("__ItemEditForm", null, new ViewDataDictionary { { "editmode", editmode }, { "readonly", _readonly }, { "nonabss", nonabss }, { "apId", AccountProfileId }, { "maxcodelength", MaxCodeLength }, { "maxnamelength", MaxNameLength }, { "currency", Currency }, { "lang", lang }, { "ACList", ACList }, { "EnableBuySellUnits", EnableBuySellUnits }, { "Shops", Shops }, { "CategoryList", CategoryList }, { "EditItem", EditItem } })
    }
}
