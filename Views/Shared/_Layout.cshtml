@{
	string sitename = Resources.Resource.SiteName;
	string lnkcls = "nav-link {0}";
	string reportlnktxt = string.Empty;
	string reportlnkcls = "nav-link dropdown-toggle {0}";
	System.Collections.Generic.List<ReportView> reports = null;
	string pagename = ViewBag.PageName ?? string.Empty;
	string eximtxt = string.Concat(Resources.Resource.Export, "-", Resources.Resource.Import);
	ComInfo ComInfo = HttpContext.Current.Session["ComInfo"] as ComInfo;
	bool enableNonM = ComInfo == null ? ConfigurationManager.AppSettings["enableNonM"] == "1" : (bool)ComInfo.enableNonM;

	bool enableCRM = ComInfo == null ? ConfigurationManager.AppSettings["enableCRM"] == "1" : (bool)ComInfo.enableCRM;

	string accessmode = HttpContext.Current.Session["AccessMode"] == null ? "pos" : (string)HttpContext.Current.Session["AccessMode"];
	int rand = CommonHelper.GetVersionRandomNo();
	string defaultcheckoutportal = CommonHelper.FirstCharToUpper(ComInfo == null ? ConfigurationManager.AppSettings["DefaultCheckoutPortal"] : ComInfo.DefaultCheckoutPortal);
	string cssbsfile = HttpContext.Current.Session["CssBSFile"] == null ? @"Content/bs4" : HttpContext.Current.Session["CssBSFile"].ToString();
	string scriptbsfile = HttpContext.Current.Session["ScriptBSFile"] == null ? @"Scripts/bs4" : HttpContext.Current.Session["ScriptBSFile"].ToString();
	bool nonabss = defaultcheckoutportal.ToLower() == "nonabss";
	string shop = ComInfo == null ? ConfigurationManager.AppSettings["Shop"] : ComInfo.Shop;
	bool approvalmode = ComInfo == null ? false : (bool)ComInfo.ApprovalMode;
	string forapproval = Resources.Resource.ForApproval;
	string forreceival = Resources.Resource.ForReceival;
	string fordelivery = Resources.Resource.ForDelivery;
	SessUser user = HttpContext.Current.Session["User"] == null ? null : HttpContext.Current.Session["User"] as SessUser;
	bool isadmin = user.Roles.Any(x => x == RoleType.Admin && x != RoleType.SalesManager);
	bool showDataTransfer = CommonHelper.GetUrlHost() != "crm.united.com.hk";
}

<!DOCTYPE html>
<html>
@Html.Partial("_Head", null, new ViewDataDictionary { { "cssbsfile", cssbsfile }, { "scriptbsfile", scriptbsfile }, { "PageTitle", ViewBag.Title } })
<body>
	<nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top" role="navigation" data-debug="@showDataTransfer">
		<div class="container-fluid">
			<div class="navbar-header">
				<a class="navbar-brand" href="/" title="@sitename"><img src="~/Images/logo.jpg" alt="@sitename" title="@sitename" /></a>
				<button type="button" class="navbar-toggler collapsed" data-toggle="collapse" data-target="#sb-navbar">
					<span class="navbar-toggler-icon"></span>
				</button>
			</div>

			<div id="sb-navbar" class="collapse navbar-collapse">
				<ul class="navbar-nav nav">
					<li class="dropdown">
						@{
							lnkcls = "nav-link {0}";
							if (ViewBag.ParentPage != null && (string)ViewBag.ParentPage.ToLower() == "sales")
							{
								lnkcls = string.Format(lnkcls, "active");
							}
							else
							{
								lnkcls = string.Format(lnkcls, string.Empty);
							}
						}
						<a class="@lnkcls dropdown-toggle" href="#" data-toggle="dropdown">@Resources.Resource.Retail</a>

						<ul class="dropdown-menu" role="menu">
							@if (!isadmin)
							{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "sales")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
								<li>
									@Html.ActionLink(string.Format(Resources.Resource.OrderFormat, Resources.Resource.Retail), "Sales", "POSFunc", new { }, new { @class = lnkcls })
								</li>

								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "advsales")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
								<li>
									@Html.ActionLink(string.Concat(string.Format(Resources.Resource.OrderFormat, Resources.Resource.Retail), "(",Resources.Resource.Advanced,")"), "AdvSales", "POSFunc", new { }, new { @class = lnkcls })
								</li>


								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "refund")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
								<li>
									@Html.ActionLink(string.Format(Resources.Resource.OrderFormat, Resources.Resource.Refunds), "Refund", "POSFunc", new { }, new { @class = lnkcls })
								</li>

								<li>
									@{
										lnkcls = "dropdown-item {0}";
										if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "salesorderlist")
										{
											lnkcls = string.Format(lnkcls, "active");
										}
										else
										{
											lnkcls = string.Format(lnkcls, string.Empty);
										}
									}
									@Html.ActionLink(string.Format(Resources.Resource.ListFormat, Resources.Resource.SalesOrder), "Index", "SalesOrder", new { }, new { @class = lnkcls })
								</li>
							}
							@if (HttpContext.Current.Session["Reports"] == null)
							{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "dayends")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}

								<li class="nav-item">
									@Html.ActionLink(Resources.Resource.DayEnds, "DayEnds", "POSFunc", new { }, new { @class = lnkcls })
								</li>

							}
							else
							{
								reportlnktxt = Resources.Resource.DayEnds;

								reports = (List<ReportView>)System.Web.HttpContext.Current.Session["Reports"];
								List<DayEndsItem> ExImViews = (List<DayEndsItem>)System.Web.HttpContext.Current.Session["ExImViews"];

								foreach (ReportView report in reports)
								{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == report.Code.ToLower()) { lnkcls = string.Format(lnkcls, "active"); } else { lnkcls = string.Format(lnkcls, string.Empty); }

									<li class="nav-item">
										@Html.ActionLink(report.Name, "Show" + report.Code, "Report", new { }, new { @class = lnkcls })
									</li>
								}
							}
						</ul>
					</li>

					<li class="dropdown">
						@{lnkcls = "nav-link {0}";
							if (ViewBag.ParentPage != null && (string)ViewBag.ParentPage.ToLower() == "customer")
							{
								lnkcls = string.Format(lnkcls, "active");
							}
							else
							{
								lnkcls = string.Format(lnkcls, string.Empty);
							}
						}
						<a href="#" class="@lnkcls" data-toggle="dropdown">
							<span class="dropdown-toggle">@Resources.Resource.Customer</span>
						</a>
						<div class="dropdown-menu">
							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "customer")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							@Html.ActionLink(string.Format(Resources.Resource.ManagementFormat, Resources.Resource.Customer), "Index", "Customer", new { }, new { @class = lnkcls })

							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "pricelevels")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
								@Html.ActionLink(Resources.Resource.PointLevel, "Index", "PriceLevels", new { }, new { @class = lnkcls })
							}

							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "pgcustomer")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							@Html.ActionLink(string.Format(Resources.Resource.AddFormat, Resources.Resource.Customer), "Index", "PGCustomer", new { }, new { @class = lnkcls })

							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "enquiry")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							@Html.ActionLink(Resources.Resource.Enquiry, "Index", "Enquiry", new { }, new { @class = lnkcls })
						</div>
					</li>

					<li class="dropdown">
						@{lnkcls = "nav-link {0}";
							if (ViewBag.ParentPage != null && (string)ViewBag.ParentPage.ToLower() == "item")
							{
								lnkcls = string.Format(lnkcls, "active");
							}
							else
							{
								lnkcls = string.Format(lnkcls, string.Empty);
							}
						}
						<a href="#" class="@lnkcls" data-toggle="dropdown">
							<span class="dropdown-toggle">@Resources.Resource.Item</span>
						</a>

						<ul class="dropdown-menu" data-portal="@defaultcheckoutportal">
							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "pglist")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							<li>@Html.ActionLink(string.Format(Resources.Resource.NewFormat, Resources.Resource.Item), "Index", "PGItem", new { }, new { @class = lnkcls })</li>

							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "stock")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							<li>@Html.ActionLink(Resources.Resource.Stock, "Stock", "Item", new { }, new { @class = lnkcls })</li>

							<li>
								@{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "transfer")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
								}
								<a class="@lnkcls" href="/Transfer/Index">@Resources.Resource.StockTransfer</a>
							</li>
							<li>
								@{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "transferlist")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
								}
								<a class="@lnkcls" href="/Transfer/List">@Resources.Resource.StockTransferOrder</a>
							</li>

							<li>
								@{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "category")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
								}
								<a class="@lnkcls" href="/ItemCategory/Index">@Resources.Resource.Category</a>
							</li>


							<li>
								@{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "zerostocks")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
									@Html.ActionLink(Resources.Resource.OutOfStockItems, "ZeroStocks", "Item", new { }, new { @class = lnkcls })
								}
							</li>
						</ul>
					</li>

					<li class="dropdown">
						@{lnkcls = "nav-link dropdown-toggle {0}";
							if (ViewBag.ParentPage != null && (string)ViewBag.ParentPage.ToLower() == "promotion")
							{
								lnkcls = string.Format(lnkcls, "active");
							}
							else
							{
								lnkcls = string.Format(lnkcls, string.Empty);
							}
						}
						<a href="#" class="@lnkcls" data-toggle="dropdown">
							<span>@Resources.Resource.Promotion</span>
						</a>
						<ul class="dropdown-menu">
							<li>
								@{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "eblast")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
								}
								<a class="@lnkcls" href="/eBlast/Index">@Resources.Resource.eBlast</a>
							</li>
							<li>
								@{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "etrack")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
								}
								<a class="@lnkcls" href="/eTrack/TrackResult?pass=@ConfigurationManager.AppSettings["eTrackToken"]">@Resources.Resource.TrackResult</a>
							</li>
							<li>
								@{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "itemperiodpromotion")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
								}
								<a class="@lnkcls" href="/ItemPeriodPromotion/Index">@Resources.Resource.ItemPeriodPromotion</a>
							</li>

							<li>
								@{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "itemqtypromotion")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
								}
								<a class="@lnkcls" href="/ItemQtyPromotion/Index">@Resources.Resource.ItemQtyPromotion</a>
							</li>

							<li>
								@{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "promotion")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
								}
								<a class="@lnkcls" href="/Promotion/Index">@string.Format(Resources.Resource.ListFormat, Resources.Resource.Promotion)</a>
							</li>
						</ul>
					</li>

					<li class="dropdown">
						@{lnkcls = "nav-link dropdown-toggle {0}";
							if (ViewBag.ParentPage != null && (string)ViewBag.ParentPage.ToLower() == "wholesales")
							{
								lnkcls = string.Format(lnkcls, "active");
							}
							else
							{
								lnkcls = string.Format(lnkcls, string.Empty);
							}
						}
						<a href="#" class="@lnkcls" data-toggle="dropdown">
							<span>@Resources.Resource.WholeSales</span>
						</a>
						<div class="dropdown-menu">
							@{
								if (!isadmin)
								{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "create")
									{ lnkcls = string.Format(lnkcls, "active"); }
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
									@Html.ActionLink(string.Format(Resources.Resource.AddFormat, Resources.Resource.Order), "Edit", "WholeSales", new { Id = 0, type = "order" }, new { @class = lnkcls })



									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "list")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
									fordelivery = string.Concat("<span class='small'>(", fordelivery, ")</span>");
									var wholesaleslist = Html.Raw(string.Concat(string.Format(Resources.Resource.ManagementFormat, Resources.Resource.WholeSaleOrder), fordelivery));
									<a class="@lnkcls" href="/WholeSales/Index">@wholesaleslist</a>
								}

								if (approvalmode && isadmin)
								{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "salesorderlist")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}

									forapproval = string.Concat("<span class='small'>(", forapproval, ")</span>");
									var wholesalesorderlist = Html.Raw(string.Concat(string.Format(Resources.Resource.ListFormat, Resources.Resource.WholeSaleOrder), forapproval));
									<a class="@lnkcls" href="/WholeSales/SalesOrderList">@wholesalesorderlist</a>

								}
							}

						</div>
					</li>

					<li class="dropdown">
						@{lnkcls = "nav-link dropdown-toggle {0}";
							if (ViewBag.ParentPage != null && (string)ViewBag.ParentPage.ToLower() == "purchase")
							{
								lnkcls = string.Format(lnkcls, "active");
							}
							else
							{
								lnkcls = string.Format(lnkcls, string.Empty);
							}
						}
						<a href="#" class="@lnkcls" data-toggle="dropdown">
							<span>@Resources.Resource.Purchase</span>
						</a>
						<ul class="dropdown-menu">
							@if (!isadmin)
							{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "order")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
								<li>
									@Html.ActionLink(string.Format(Resources.Resource.NewFormat, Resources.Resource.PurchaseOrder), "Edit", "Purchase", new { Id = 0, type = "order" }, new { @class = lnkcls })
								</li>

								<li>
									@{
										lnkcls = "dropdown-item {0}";
										if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "purchase")
										{
											lnkcls = string.Format(lnkcls, "active");
										}
										else
										{
											lnkcls = string.Format(lnkcls, string.Empty);
										}

										forreceival = string.Concat("<span class='small'>(", forreceival, ")</span>");
										var purchaselist = Html.Raw(string.Concat(string.Format(Resources.Resource.ManagementFormat, Resources.Resource.PurchaseOrder), forreceival));
									}
									<a class="@lnkcls" href="/Purchase/Index">@purchaselist</a>

								</li>
							}

							@if (approvalmode && isadmin)
							{
								<li>
									@{lnkcls = "dropdown-item {0}";
										if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "purchaseorderlist")
										{
											lnkcls = string.Format(lnkcls, "active");
										}
										else
										{
											lnkcls = string.Format(lnkcls, string.Empty);
										}

										var purchaseorderlist = Html.Raw(string.Concat(string.Format(Resources.Resource.ListFormat, Resources.Resource.PurchaseOrder), forapproval));
									}
									<a class="@lnkcls" href="/Purchase/PurchaseOrderList">@purchaseorderlist</a>
								</li>
							}


							<li>
								@{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "supplier")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
								}
								@Html.ActionLink(string.Format(Resources.Resource.ManagementFormat, Resources.Resource.Supplier), "Index", "Supplier", null, new { @class = lnkcls })
							</li>

						</ul>
					</li>


					@if (showDataTransfer)
					{
						<li class="dropdown">
							@{lnkcls = "nav-link {0}";
								if (ViewBag.ParentPage != null && (string)ViewBag.ParentPage.ToLower() == "dayends")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							<a href="#" class="@lnkcls" data-toggle="dropdown">
								<span class="dropdown-toggle">@Resources.Resource.DataIntegration</span>
							</a>
							<div class="dropdown-menu">
								@{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "dayendsimportfrmcentral")
									{ lnkcls = string.Format(lnkcls, "active"); }
									else { lnkcls = string.Format(lnkcls, string.Empty); }
									var pagetitle = HttpContext.Current.Session["ImportFrmCentralPageTitle"] ?? string.Format(Resources.Resource.DayendsImportFrmCentral, defaultcheckoutportal.ToUpper());
									<a href="/DataTransfer/DayendsImportFrmCentral" class="@lnkcls">@pagetitle</a>


									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "dayendsexportfrmshop")
									{
										lnkcls = string.Format(lnkcls, "active");
									}
									else
									{
										lnkcls = string.Format(lnkcls, string.Empty);
									}
									pagetitle = HttpContext.Current.Session["ExportFrmShopPageTitle"] ?? string.Format(Resources.Resource.DayendsImportFrmShop, defaultcheckoutportal.ToUpper());
									<a href="/DataTransfer/DayendsExportFrmShop" class="@lnkcls">@pagetitle</a>
								}

							</div>
						</li>
					}


					<li class="dropdown">
						@{
							reportlnktxt = Resources.Resource.Report;
							reportlnkcls = "nav-link dropdown-toggle {0}";
							if (ViewBag.ParentPage != null && (string)ViewBag.ParentPage.ToLower() == "generalreports")
							{
								reportlnkcls = string.Format(reportlnkcls, "active");
							}
							else
							{
								reportlnkcls = string.Format(reportlnkcls, string.Empty);
							}
						}
						<a href="#" class="@reportlnkcls" data-toggle="dropdown">
							@reportlnktxt  <span class="caret"></span>
						</a>
						<div class="dropdown-menu">
							@{
								reports = (List<ReportView>)System.Web.HttpContext.Current.Session["GeneralReports"];
							}

							@if (reports != null && reports.Count > 0)
							{
								foreach (ReportView report in reports)
								{
									lnkcls = "dropdown-item {0}";
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == report.Code.ToLower()) { lnkcls = string.Format(lnkcls, "active"); } else { lnkcls = string.Format(lnkcls, string.Empty); }
									@Html.ActionLink(report.Name, "Show" + report.Code, "Report", new { }, new { @class = lnkcls });
								}
							}
						</div>
					</li>

					<li class="dropdown">
						@{
							reportlnktxt = Resources.Resource.Report;
							reportlnkcls = "nav-link dropdown-toggle {0}";
							if (ViewBag.ParentPage != null && (string)ViewBag.ParentPage.ToLower() == "abssreports")
							{
								reportlnkcls = string.Format(reportlnkcls, "active");
							}
							else
							{
								reportlnkcls = string.Format(reportlnkcls, string.Empty);
							}
						}
						<a href="#" class="@reportlnkcls" data-toggle="dropdown">
							@string.Format(Resources.Resource.ReportFormat, "ABSS") <span class="caret"></span>
						</a>
						<div class="dropdown-menu">
							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "quotation")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							@Html.ActionLink(Resources.Resource.Quotation, "Quotation", "ABSSReport", null, new { @class = lnkcls })
							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "receivable")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							@Html.ActionLink(Resources.Resource.AccountReceivable, "AccountReceivable", "ABSSReport", null, new { @class = lnkcls })
						</div>
					</li>

					<li class="dropdown">
						@{
							reportlnktxt = Resources.Resource.Record;
							reportlnkcls = "nav-link dropdown-toggle {0}";
							if (ViewBag.ParentPage != null && (string)ViewBag.ParentPage.ToLower() == "records")
							{
								reportlnkcls = string.Format(reportlnkcls, "active");
							}
							else
							{
								reportlnkcls = string.Format(reportlnkcls, string.Empty);
							}
						}
						<a href="#" class="@reportlnkcls" data-toggle="dropdown">
							@reportlnktxt  <span class="caret"></span>
						</a>
						<div class="dropdown-menu">
							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "attendance")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							@Html.ActionLink(Resources.Resource.AttendanceRecords, "Index", "Attendance", null, new { @class = lnkcls })

							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "job")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							@Html.ActionLink(Resources.Resource.JobRecords, "Index", "Job", null, new { @class = lnkcls })

							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "training")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							@Html.ActionLink(Resources.Resource.TrainingRecords, "Index", "Training", null, new { @class = lnkcls })

							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "journal")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							@Html.ActionLink(Resources.Resource.JournalRecords, "Index", "Journal", null, new { @class = lnkcls })
						</div>
					</li>

					<li class="dropdown">
						@{lnkcls = "nav-link {0}";
							if (ViewBag.ParentPage != null && (string)ViewBag.ParentPage.ToLower() == "setup")
							{
								lnkcls = string.Format(lnkcls, "active");
							}
							else
							{
								lnkcls = string.Format(lnkcls, string.Empty);
							}
						}
						<a href="#" class="@lnkcls" data-toggle="dropdown">
							<span class="dropdown-toggle">@Resources.Resource.Setup</span>
						</a>
						@{ bool tmp = HttpContext.Current.Session["Menus"] == null;}
						<div class="dropdown-menu" data-debug="@tmp">
							@{
								Dictionary<string, Menu> dicSetupMenus = (Dictionary<string, Menu>)HttpContext.Current.Session["Menus"];
							}
							@if (dicSetupMenus != null)
							{
								foreach (string key in dicSetupMenus.Keys)
								{
									lnkcls = "dropdown-item {0}";
									Menu menu = dicSetupMenus[key];
									if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == key.ToLower()) { lnkcls = string.Format(lnkcls, "active"); } else { lnkcls = string.Format(lnkcls, string.Empty); }
									@Html.ActionLink(menu.DisplayText, menu.ActionName, menu.ControllerName, new { }, new { @class = lnkcls });
								}
							}

							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "accessrights")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
							}
							@Html.ActionLink(string.Format(Resources.Resource.ManagementFormat, Resources.Resource.User), "Index", "AccessRight", new { }, new { @class = lnkcls })

							@{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "exchangerate")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
								<a href="/Othersettings/ExchangeRate" class="@lnkcls">@string.Format(Resources.Resource.SetupFormat, Resources.Resource.ExchangeRate)</a>
							}

							@if (defaultcheckoutportal.ToLower() == "kingdee")
							{
								lnkcls = "dropdown-item {0}";
								if (ViewBag.PageName != null && (string)ViewBag.PageName.ToLower() == "kingdee")
								{
									lnkcls = string.Format(lnkcls, "active");
								}
								else
								{
									lnkcls = string.Format(lnkcls, string.Empty);
								}
								<a href="/Othersettings/KingdeeAccountInfo" class="@lnkcls">@Resources.Resource.KingdeeAccountInfo</a>
							}
						</div>
					</li>




				</ul>

			</div>

			<input type="hidden" id="checkoutportal" value="@defaultcheckoutportal.ToLower()" />
			<input type="hidden" id="shop" value="@shop" />

			@Html.Partial("_LoginPartial", null, new ViewDataDictionary { { "iscentral", false } })



		</div>
	</nav>

	<div class="container">
		<div>
			@if (TempData["message"] != null)
			{
				<div id="msgblk" class="alert alert-success">@TempData["message"]</div>
			}
			@if (TempData["warning"] != null)
			{
				<div id="warnblk" class="alert alert-danger">@TempData["warning"]</div>
			}
		</div>
	</div>

	@Html.Partial("_TxtBlk")

	<div id="appInfo" data-checkoutportal="@defaultcheckoutportal" data-enablewhatsapplnk="@ComInfo.enableWhatsappLink" data-whatsappapilnk="@ConfigurationManager.AppSettings["WhatsappLinkUrl"]" data-whatsappapidefaulttxt="@ConfigurationManager.AppSettings["WhatsappAPIDefaultText"]"></div>

	<script src="~/Scripts/ts/js/app.js?v=@rand"></script>

	<div class="container body-content">

		@RenderBody()

		@Html.Partial("_Footer")
	</div>

	@RenderSection("scripts", required: false)

	<span id="pagename" class="hide" data-page="@pagename"></span>

	<script>
		$(function () {
			let $msgblk = $('#msgblk');
			if ($msgblk.text() !== null) {
				timer = setTimeout(function () {
					$msgblk.hide('slow');
				}, 4000);
			}
		});

	</script>
</body>
</html>