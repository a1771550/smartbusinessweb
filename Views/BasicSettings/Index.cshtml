@model BasicSettingsModel

@{
	ViewBag.Title = Resources.Resource.BasicSettings;
	int rand = new Random().Next(10000, 100000);
	int lang = (int)HttpContext.Current.Session["CurrentCulture"];

	List<BasicSettingsView> editables = new List<BasicSettingsView>();
	List<BasicSettingsView> enables = new List<BasicSettingsView>();
	List<BasicSettingsView> printcopies = new List<BasicSettingsView>();
	BasicSettingsView docketprinter = null;
	BasicSettingsView a4printer = null;
	BasicSettingsView priorityprinter = null;
	BasicSettingsView poledisplay = null;
	BasicSettingsView showreportbtn = new BasicSettingsView();
	List<BasicSettingsView> defaultcustomers = new List<BasicSettingsView>();
	BasicSettingsView defaultnotes = new BasicSettingsView();
	BasicSettingsView cashdrawer = new BasicSettingsView();
	BasicSettingsView dateformat = null;
	BasicSettingsView logo = null;
	BasicSettingsView displaylogo = new BasicSettingsView();
	BasicSettingsView checkdayends = new BasicSettingsView();
	BasicSettingsView nodayendscheckinoutwithoutsessiondone = new BasicSettingsView();

	List<string> selectedfields = new List<string>();

	String selected = String.Empty;
	String taxtype = "";
	Decimal taxrate = 0;
	foreach (var item in Model.BasicSettings)
	{
		if (item.appParam == "InclusiveTaxRate")
		{
			taxrate = decimal.Parse(item.appVal);
		}
		if (item.appParam.ToLower() == "taxtype")
		{
			taxtype = item.appVal;
		}
		if (item.appParam.ToLower().StartsWith("enable"))
		{
			enables.Add(item);
		}
		if (item.appParam.ToLower().StartsWith("editable"))
		{
			editables.Add(item);
		}
		if (item.appParam.ToLower().StartsWith("receiptcopies") && item.appIsActive)
		{
			printcopies.Add(item);
		}

		if (item.appParam.ToLower().StartsWith("dateformat") && item.appIsActive)
		{
			dateformat = new BasicSettingsView();
			dateformat = item;
		}

		if (item.appParam.ToLower().StartsWith("docket") && item.appIsActive)
		{
			docketprinter = new BasicSettingsView();
			docketprinter = item;
		}
		if (item.appParam.ToLower().StartsWith("a4") && item.appIsActive)
		{
			a4printer = new BasicSettingsView();
			a4printer = item;
		}

		if (item.appParam.ToLower().StartsWith("priority") && item.appIsActive)
		{
			priorityprinter = null;
			priorityprinter = item;
		}

		if (item.appParam.ToLower().StartsWith("pole"))
		{
			poledisplay = new BasicSettingsView();
			poledisplay = item;
		}

		if (item.appParam.ToLower().StartsWith("showreport"))
		{
			showreportbtn = item;
		}
		if (item.appParam.ToLower().StartsWith("defaultcustomer"))
		{
			defaultcustomers.Add(item);
		}
		if (item.appParam.ToLower().StartsWith("defaultsalesnotes"))
		{
			defaultnotes = item;
		}

		if (item.appParam == "ReceiptPrintFields" && item.appIsActive)
		{
			selectedfields = item.appVal.Split(',').ToList();
		}

		if (item.appParam.ToLower().StartsWith("logo") && item.appIsActive)
		{
			logo = new BasicSettingsView();
			logo = item;
		}
	}

	String selectlogotxt = lang == 2 ? String.Concat(Resources.Resource.Select, " ", Resources.Resource.Logo) : String.Concat(Resources.Resource.Select, Resources.Resource.Logo);
	String startuploadtxt = lang == 2 ? String.Concat(Resources.Resource.Start, " ", Resources.Resource.Upload) : String.Concat(Resources.Resource.Start, Resources.Resource.Upload);
	String canceluploadtxt = lang == 2 ? String.Concat(Resources.Resource.Cancel, " ", Resources.Resource.Upload) : String.Concat(Resources.Resource.Cancel, Resources.Resource.Upload);
	String deleteselectedtxt = lang == 2 ? String.Concat(Resources.Resource.Remove, " ", Resources.Resource.Selected) : String.Concat(Resources.Resource.Remove, Resources.Resource.Selected);
	String uploadlogotxt = lang == 2 ? String.Concat(Resources.Resource.Upload, " ", Resources.Resource.Logo) : String.Concat(Resources.Resource.Upload, Resources.Resource.Logo);
	String imgfiles = Resources.Resource.ImageFiles;
	String exceeduploadfilelimittxt = String.Format(Resources.Resource.ExceedUploadSizeLimitWarning, Model.UploadSizeLimitMB);
	String receiptlogo = Model.ReceiptLogo;
}

<link rel="stylesheet" type="text/css" href="~/Content/settings/basicsettings.css?v=@rand" />


@using (Html.BeginForm("Edit", "BasicSettings", FormMethod.Post, new { @id = "frmOS" }))
{
	@Html.AntiForgeryToken()

	<h3 class="text-center">@ViewBag.Title</h3>

	<span class="alert alert-info d-inline-block small">
		<strong>@Resources.Resource.Remark:</strong> @Resources.Resource.NextLoginEffectiveRemark
	</span>


	<div id="osblk" class="d-flex mb-3">
		<div class="col-2 leftcol pt-4">

			<label class="control-label d-block mb-5 mt-2">@logo.DisplayText</label>


			<label class="control-label d-block mb-5" style="margin-top:7.3em;">@Resources.Resource.Editable</label>

			<label class="control-label d-block" style="margin-bottom:3.8em;">@Resources.Resource.AccountNo</label>

			@if (printcopies.Count > 0)
			{
				<label class="control-label d-block mb-5">@Resources.Resource.PrintCopies</label>
			}

			@if (docketprinter != null)
			{
				<label class="control-label d-block mb-5" style="margin-top:4.5em;">@docketprinter.DisplayText</label>
			}

			@if (a4printer != null)
			{
				<label class="control-label d-block mb-5">@a4printer.DisplayText</label>
			}

			@if (priorityprinter != null)
			{
				<label class="control-label d-block mb-5">@priorityprinter.DisplayText</label>
			}

			@if (poledisplay != null)
			{
				<label class="control-label d-block mb-5">@poledisplay.DisplayText</label>
			}
			@if (dateformat != null)
			{
				<label class="control-label d-block mb-5" style="">@Resources.Resource.DateFormatTxt</label>
			}

			<label class="control-label d-block mb-5">@Resources.Resource.CountPayments</label>

			<label class="control-label d-block mb-5">@Resources.Resource.DefaultCustomer</label>

			@if (defaultnotes != null)
			{
				<label class="control-label d-block mb-5">@defaultnotes.DisplayText</label>
			}

			<label class="control-label d-block mb-5" style="margin-top:12em;">@Resources.Resource.InitSettings</label>
		</div>
		<div class="col-10 rightcol pt-4">

			<div class="row mb-5 mt-2">

				@{selected = (logo.appVal == "1") ? "checked" : "";}
				<div class="form-check form-check-inline" style="border:1px solid #9a9797; background-color:#e6e5e5;padding:1em;">
					<input class="form-check-input mb-auto logo" type="checkbox" id="EnableLogoReceipt" value="@logo.appVal" name="EnableLogoReceipt" @selected>
					<img id="receiptlogo" src="@receiptlogo" class="ml-4" alt="@logo.DisplayText" title="@logo.DisplayText" style="width:100px;height:58px;" />
				</div>
				<input type="hidden" name="@logo.appParam" id="@logo.appParam" value="@logo.appVal" />
			</div>


			<div class="row mb-5">
				@foreach (var editable in editables)
				{
					selected = (editable.appVal == "1") ? "checked" : "";
					<div class="form-check form-check-inline">
						<input class="form-check-input" type="checkbox" data-id="@editable.appParam" value="@editable.appVal" @selected>
						<label class="form-check-label" for="@editable.appParam">@editable.DisplayText</label>
					</div>
					<input type="hidden" id="@editable.appParam" name="@editable.appParam" value="@editable.appVal" />
				}

			</div>

			<div class="row mb-5" style="">
				@Html.EditorFor(model => model.AccountNo, new { htmlAttributes = new { @class = "form-control", style = "" } })
			</div>

			@if (printcopies.Count > 0)
			{
				<div class="row mb-1">
					@foreach (var item in printcopies)
					{
						<div class="form-inline">
							<input type="number" class="form-control mr-2" id="@item.appParam" name="@item.appParam" value="@item.appVal" style="width:30%;" />
							<label for="@item.appParam" class="label">@item.DisplayText</label>
						</div>

					}
				</div>

				<div class="row mb-5">
					<span class="small">(@Resources.Resource.Remark: @Resources.Resource.CashNonCashRemark)</span>
				</div>
			}


			@if (docketprinter != null)
			{
				<div class="row mb-5" style="margin-top:-.5em;">
					<select id="@docketprinter.appParam" class="form-control" name="@docketprinter.appParam">
						@foreach (var printer in Model.Printers)
						{
							selected = docketprinter.appVal == printer ? " selected" : "";
							<option value="@printer" @selected>@printer</option>
						}
					</select>
				</div>
			}

			@if (a4printer != null)
			{
				<div class="row mb-4" style="margin-top:-1em;">
					<select id="@a4printer.appParam" class="form-control" name="@a4printer.appParam">
						@foreach (var printer in Model.Printers)
						{
							selected = a4printer.appVal == printer ? " selected" : "";
							<option value="@printer" @selected>@printer</option>
						}
					</select>
				</div>
			}

			@if (priorityprinter != null)
			{
				String docketselected = priorityprinter.appVal == docketprinter.appVal ? "checked" : "";
				String a4selected = priorityprinter.appVal == a4printer.appVal ? "checked" : "";

				<div class="row mb-5" style="margin-top:2em;">
					<div class="form-check form-check-inline">
						<input class="form-check-input" type="radio" name="@priorityprinter.appParam" id="radDocket" value="@docketprinter.appVal" @docketselected>
						<label class="form-check-label" for="radDocket">@Resources.Resource.DocketPrinter</label>
					</div>
					<div class="form-check form-check-inline">
						<input class="form-check-input" type="radio" name="@priorityprinter.appParam" id="radA4" value="@a4printer.appVal" @a4selected>
						<label class="form-check-label" for="radA4">@Resources.Resource.A4Printer</label>
					</div>
				</div>
			}

			@if (poledisplay != null)
			{
				<div class="row mb-4">
					<input type="text" class="form-control" id="txtPoleDisplay" name="@poledisplay.appParam" value="@poledisplay.appVal" />
				</div>
			}

			@if (dateformat != null)
			{
				String UKselected = dateformat.appVal == "E" ? "checked" : "";
				String USselected = dateformat.appVal == "U" ? "checked" : "";
				<div class="row mb-5" style="margin-top:2em;">
					<div class="form-check form-check-inline">
						<input class="form-check-input" type="radio" name="@dateformat.appParam" id="radUK" value="E" @UKselected>
						<label class="form-check-label" for="radUK">@Resources.Resource.UK</label>
					</div>
					<div class="form-check form-check-inline">
						<input class="form-check-input" type="radio" name="@dateformat.appParam" id="radUS" value="U" @USselected>
						<label class="form-check-label" for="radUS">@Resources.Resource.US</label>
					</div>
				</div>
			}


			<div class="row mb-5" style="margin-top:2em;">
				@{selected = (showreportbtn.appVal == "1") ? "checked" : "";}
				<div class="form-check form-check-inline">
					<input class="form-check-input" type="checkbox" data-id="@showreportbtn.appParam" value="@showreportbtn.appVal" @selected>
					<label class="form-check-label" for="@showreportbtn.appParam">@showreportbtn.DisplayText</label>
				</div>
				<input type="hidden" id="@showreportbtn.appParam" name="@showreportbtn.appParam" value="@showreportbtn.appVal" />
			</div>

			<div class="row mb-4" style="margin-top:-.4em;">
				<div class="form-inline mr-3">
					<span class="label mr-2">@Resources.Resource.Sales</span>
					<input type="text" class="form-control" id="txtDefaultSalesCustomer" name="@defaultcustomers[0].appParam" value="@defaultcustomers[0].appVal" />
				</div>
				<div class="form-inline">
					<span class="label mr-2">@Resources.Resource.Refunds</span>
					<input type="text" class="form-control" id="txtDefaultRefundCustomer" name="@defaultcustomers[1].appParam" value="@defaultcustomers[1].appVal" />
				</div>
			</div>



			<div class="row mb-4 mt-5" style="">
				@{selected = (Model.DefaultSalesNotes) ? "checked" : "";}
				<div class="form-check form-check-inline" style="border:1px solid #9a9797; background-color:#e6e5e5;padding:1em;">
					<input class="form-check-input mb-auto" type="checkbox" id="@defaultnotes.appParam" value="@defaultnotes.appVal" @selected />
					<textarea id="DefaultSalesNotesTxt" name="DefaultSalesNotesTxt" class="form-control d-inline-block ml-2" cols="250" rows="5">@Model.DefaultSalesNoteTxt</textarea>
				</div>
				@Html.HiddenFor(model => model.UseDefaultNote)
			</div>


			<div class="row mb-5" style="line-height:200%;">
				@foreach (var enable in enables)
				{
					selected = (enable.appVal == "1") ? "checked" : "";
					var chkId = "chk" + enable.appParam;
					var disabled = (enable.appParam == "EnableBuySellUnits" && enable.appVal == "1") ? "disabled" : "";
					<div class="form-check form-check-inline">
						<input class="form-check-input enable" id="@chkId" type="checkbox" data-param="@enable.appParam" value="@enable.appVal" @selected @disabled>
						<label class="form-check-label" for="@enable.appParam">@enable.DisplayText</label>
					</div>
					<input type="hidden" id="@enable.appParam" name="@enable.appParam" value="@enable.appVal" />
				}

			</div>

		</div>
	</div>


	var taxIchecked = taxtype == "I" ? "checked" : "";
	var taxEchecked = taxtype == "E" ? "checked" : "";

	<div id="taxTypeModal">
		<div class="form-check form-check-inline">
			<input class="form-check-input taxtype" type="radio" name="_taxtype" id="incTax" value="I" @taxIchecked>
			<label class="form-check-label" for="incTax">@Resources.Resource.InclusiveTax</label>
		</div>
		<div class="form-check form-check-inline">
			<input class="form-check-input taxtype" type="radio" name="_taxtype" id="excTax" value="E" @taxEchecked>
			<label class="form-check-label" for="excTax">@Resources.Resource.ExclusiveTax</label>
		</div>
		<div class="form-group">
			<label for="txtTaxRate">@Resources.Resource.InclusiveTaxRate</label>
			<input type="number" class="form-control" id="txtTaxRate" name="InclusiveTaxRate" placeholder="@Resources.Resource.InclusiveTaxRate" value="@taxrate">
		</div>
	</div>

	<div class="row justify-content-center my-3">
		<button type="button" class="btn btn-success" id="btnSave">@Resources.Resource.Save</button>
		<input type="hidden" name="TaxType" id="TaxType" />
	</div>
}

@Html.Partial("_WaitingModal")

@Html.Partial("_CurrencySettingModal")

<div id="logoModal">

	@using (Html.BeginForm("Upload", "BasicSettings", FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
		@Html.AntiForgeryToken()

		<div id="fileblk" class="mt-4">
			<input type="file" id="FileUpload1" />
			<div class="row px-3">
				<button type="button" id="btnUpload" class="btn btn-info mt-3">@uploadlogotxt</button>
			</div>
			<p class="warning"></p>
		</div>
	}

</div>

<script src="~/Scripts/filestyle.js"></script>
<div id="infoblk" data-logotxt="@logo.DisplayText" data-uploadsizelimit="@ConfigurationManager.AppSettings["UploadSizeLimitBytes"]" data-uploadsizelimitmb="@ConfigurationManager.AppSettings["UploadSizeLimit"]" data-confirmirreversibletxt="@Resources.Resource.ConfirmIrreversiblePrompt"></div>

<script src="~/Scripts/ts/js/settings/basicsettings.js?v=@rand"></script>
