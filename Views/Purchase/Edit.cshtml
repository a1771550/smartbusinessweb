@model PurchaseModel

@{
    bool editmode = Model.Id > 0;
    string edittxt = editmode ? Resources.Resource.Edit : Resources.Resource.Add;
    ViewBag.Title = edittxt + " " + Resources.Resource.Purchase;
    int rand = CommonHelper.GetVersionRandomNo();

    if (!editmode)
    {
        Model.pstSalesLoc = HttpContext.Current.Session["ComInfo"] == null ? "" : (HttpContext.Current.Session["ComInfo"] as ComInfo).Shop;
    }
    bool approvalmode = (bool)Model.ComInfo.ApprovalMode;
    var currency = Model.ComInfo.Currency;
    bool showrecur = false;
    SessUser user = System.Web.HttpContext.Current.Session["User"] as SessUser;
    bool isapprover = user.Roles.Any(x => x == RoleType.Admin || x == RoleType.SalesManager);
    bool ismanager = user.Roles.Any(x => x == RoleType.SalesManager);
    bool isadmin = user.Roles.Any(x => x == RoleType.Admin && x != RoleType.SalesManager);
}
<link rel="stylesheet" type="text/css" href="~/Scripts/jspreadsheet/dist/jexcel.css" />
<link rel="stylesheet" type="text/css" href="~/Scripts/jsuites/dist/jsuites.css" />
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

<h2 class="mb-4" data-editmode="@editmode" data-exrate="@Model.pstExRate">@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Purchase", null, FormMethod.Post, new { @Id = "frmPurchase" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.pstCode)
    @Html.HiddenFor(model => model.pstType)
    @Html.HiddenFor(model => model.UseForexAPI)
    @Html.HiddenFor(model => model.pstSalesLoc)
    @Html.HiddenFor(model => model.pstAllLoc)
    @Html.HiddenFor(model => model.pstExRate)

    <div class="row justify-content-end my-4 px-4">
        <h5 id="status" class="">@Model.pstStatus.ToUpper()</h5>
        @Html.HiddenFor(model => model.pstStatus)
    </div>

    if (showrecur)
    {
        <button type="button" id="btnUseRecur" class="btn btn-outline-info my-2">@Resources.Resource.UseRecurring</button>
    }

    <div class="row">
        <div class="col-12 col-md-2">
            <div class="form-group">
                <label class="control-label">@string.Format(Resources.Resource.PurchaseFormat, Resources.Resource.Code)</label>

                <input type="text" class="form-control" id="pstCode" name="pstCode" value="@Model.pstCode" readonly />

            </div>
        </div>
        <div class="col-12 col-md-2">
            <div class="form-group required">
                <label class="control-label">@string.Format(Resources.Resource.DateFormat, Resources.Resource.Purchase)</label>

                <input type="datetime" class="form-control datepicker" id="purchaseDate" />
                @Html.HiddenFor(model => model.pstPurchaseDate)
                @Html.HiddenFor(model => model.PurchaseDateDisplay)

            </div>
        </div>

        @{
            var pstcurrency = Model.pstCurrency ?? "HKD";
        }
        <div class="col-12 col-md-2">
            @Html.Partial("_ExRateModal", null, new ViewDataDictionary { { "fieldname", "pstCurrency" }, { "currency", pstcurrency }, { "required", "required" }, { "exratestyle", "margin-top:-1rem;" } })
        </div>

        <div class="col-12 col-md-2">
            <div class="form-group required">
                <label class="control-label d-block" for="drpSupplier">@Resources.Resource.Supplier</label>

                <select id="drpSupplier" name="supCode" class="form-control card" data-supcode="@Model.supCode">
                    <option value="">-- @Resources.Resource.Select --</option>
                    @foreach (var item in Model.SupplierList)
                    {
                        var selected = Model.supCode == item.Value ? "selected" : "";
                        <option value="@item.Value" @selected>@item.Text</option>
                    }
                </select>

            </div>
        </div>
        <div class="col-12 col-md-2">
            <div class="form-group">
                <label class="control-label" for="pstSupplierInvoice">@Resources.Resource.SupplierInvoice</label>

                <input type="text" class="form-control" id="pstSupplierInvoice" name="pstSupplierInvoice" value="@Model.pstSupplierInvoice" />

            </div>
        </div>
        <div class="col-12 col-md-2">
            <div class="form-group required">
                <label class="control-label" for="drpLocation">@Resources.Resource.Location</label>

                <select id="drpLocation" name="pstSalesLoc" class="form-control" data-modellocation="@Model.pstSalesLoc">
                    @* <option value="">-- @Resources.Resource.Select --</option>*@
                    @foreach (var item in Model.LocationList)
                    {
                        string selected = Model.pstSalesLoc == item.Value ? "selected" : "";
                        <option value="@item.Value" @selected>@item.Text</option>
                    }
                </select>
                @{ var _checked = editmode && Model.pstAllLoc != null ? (bool)Model.pstAllLoc ? "checked" : "" : "";}
                @Html.Partial("_ApplyToAllSalesLocation", null, new ViewDataDictionary { { "checked", _checked } })
                @*<div class="form-check form-check-inline mx-2">
                        <input class="form-check-input" type="checkbox" id="chkAllLoc" value="1" @_checked>
                        <label class="form-check-label small danger" for="chkAllLoc">@Resources.Resource.ApplyToAllSalesLocation</label>
                    </div>*@
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-center my-4" data-status="@Model.pstStatus" data-enabletax="@Model.EnableTax" data-inclusivetax="@(Model.InclusiveTax)">
        <table id="tblPSI" class="jexcel" cellpadding="0" cellspacing="0" style="width:100%;">           
            <thead class="resizable">
                <tr class="">
                    <td class="" style="width:50px;max-width:50px;"></td>
                    <td title="@Resources.Resource.ItemCode" style="text-align: center;width:100px;">@Resources.Resource.ItemCode</td>
                    <td title="@Resources.Resource.ItemName" style="text-align: center;width:100px;">@Resources.Resource.ItemName</td>
                    <td title="@Resources.Resource.BaseUnit" style="text-align: right; width: 70px;min-width:70px;">@Resources.Resource.BaseUnit</td>
                    <td title="@Resources.Resource.Qty" style="text-align: right; width: 80px;">@Resources.Resource.Qty</td>
                    @if (Model.pstStatus == PurchaseStatus.opened.ToString() || Model.pstStatus == PurchaseStatus.partialreceival.ToString())
                    {
                        <td title="@Resources.Resource.Batch" style="text-align: center; width: 100px;">@Resources.Resource.Batch</td>
                        <td title="@Resources.Resource.SerialNo" style="text-align: center; width: 100px;">@Resources.Resource.SerialNoItemHeader</td>
                        <td title="@Resources.Resource.ExpiryDate" style="text-align: center; width: 100px;">@Resources.Resource.ExpiryDate</td>
                        <td title="@Resources.Resource.ItemVariations" style="text-align: center; width: 100px;">@Resources.Resource.ItemVariations</td>
                    }
                    <td style="text-align: right; width: 100px;">@Resources.Resource.UnitPrice (@Model.Currency)</td>
                    <td title="@Resources.Resource.DiscPc" style="text-align: right; width: 100px;">@Resources.Resource.DiscPc</td>
                    @if (Model.EnableTax && !Model.InclusiveTax)
                    {
                        <td title="@Resources.Resource.Tax" style="text-align: right; width: 100px;">@Resources.Resource.TaxItemHeader</td>
                    }
                    <td class="text-center" style="width: 100px;">@Resources.Resource.Location</td>
                    <td class="text-center" style="width: 100px;">@Resources.Resource.Job4Myob</td>
                    <td title="@Resources.Resource.Amount" style="text-align: right; width: 100px;">@Resources.Resource.Amount (@Model.Currency)</td>
                    @if (Model.pstStatus == PurchaseStatus.opened.ToString() || Model.pstStatus == PurchaseStatus.partialreceival.ToString())
                    {
                        <td title="@Resources.Resource.ReceivedQty" style="text-align: right;width:90px!important;">@Resources.Resource.ReceivedQty</td>
                    }
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    var decimaltotal = CommonHelper.FormatNumber(Model.Total);
    <div class="row my-4">
        <div class="col-12 col-md-4">
            <div class="form-group">
                <label class="control-label">@Resources.Resource.PromisedDate</label>

                <input type="datetime" class="form-control datepicker" id="promisedDate" />
                @Html.HiddenFor(model => model.pstPromisedDate)
                @Html.HiddenFor(model => model.PromisedDateDisplay)
            </div>
        </div>
        <div class="col-12 col-md-4">
            <div class="form-group">
                <label class="control-label" for="pstRemark">@Resources.Resource.Remark</label>

                <textarea class="form-control" id="pstRemark" name="pstRemark" rows="5">@Model.pstRemark</textarea>

            </div>
        </div>
        <div class="col-12 col-md-4 text-right">
            <div class="form-inline mb-2 float-right">
                <div class="form-group">
                    <label for="txtTotal" class="col-form-label mx-sm-3 font-weight-bold">@Resources.Resource.TotalAmount (@Model.Currency)</label>
                    <input type="number" class="form-control" id="txtTotal" readonly name="TotalAmount" value="@decimaltotal" />
                </div>
            </div>
        </div>

    </div>


    <div id="btnblk" class="row justify-content-end px-4" data-isapprover="@isapprover" data-editmode="@editmode" data-status="@Model.pstStatus">

        @if (approvalmode)
        {
            <input type="hidden" id="mode" value="@Model.Mode" />

            if (isapprover)
            {
                if (Request.QueryString["ireadonly"] != null && Request.QueryString["ireadonly"] == "1")
                {
                    <div class="d-none d-md-block text-right">
                        <button type="button" id="" class="btn btn-primary mr-2 respond btnApprove" data-type="approve" data-code="">@Resources.Resource.Approve</button>
                        <button type="button" id="" class="btn btn-danger mr-4 respond btnReject" data-type="reject" data-code="">@Resources.Resource.Reject</button>
                    </div>
                    <div class="d-block d-md-none">
                        <button type="button" id="" class="btn btn-primary d-flex respond btnApprove" data-type="approve" data-code="">@Resources.Resource.Approve</button>
                        <button type="button" id="" class="btn btn-danger d-flex respond btnReject" data-type="reject" data-code="">@Resources.Resource.Reject</button>
                    </div>
                }

                if (ismanager && Model.pstStatus.ToLower() == PurchaseStatus.order.ToString() || Model.pstStatus.ToLower() == PurchaseStatus.created.ToString())
                {
                    @Html.Partial("_NormalSaveBlk4Purchase", null, new ViewDataDictionary { { "editmode", editmode }, { "status", Model.pstStatus }, { "approvalmode", approvalmode } })
                }

            }
            else
            {
                if (editmode && (Model.pstStatus.ToLower() == PurchaseStatus.order.ToString() || Model.pstStatus.ToLower() == PurchaseStatus.created.ToString() || Model.pstStatus.ToLower() == PurchaseStatus.rejected.ToString()))
                {
                    <div class="text-right">
                        @Html.Partial("_NormalSaveBlk4Purchase", null, new ViewDataDictionary { { "editmode", editmode }, { "status", Model.pstStatus }, { "approvalmode", approvalmode } })
                    </div>
                }
                else if (!editmode)
                {
                    <div class="d-none d-md-block text-right">
                        <button id="" type="button" class="btn btn-primary ml-3 my-2 request makeorder btnRequestApproval" style="height:5em;">@Resources.Resource.Request4Approval</button>
                        @if (showrecur)
                        {
                            <button id="" type="button" class="btn btn-info ml-3 my-2 btnSaveRecur makeorder">@Resources.Resource.SaveAsRecurring</button>
                        }
                        <button id="" type="button" class="btn btn-success ml-3 my-2 btnNewPurchase">@string.Format(Resources.Resource.NewFormat, Resources.Resource.Purchase)</button>
                    </div>

                    <div class="d-block d-sm-block d-md-none text-right">
                        <button id="" type="button" class="btn btn-primary d-flex my-2 request btnRequestApproval makeorder">@Resources.Resource.Request4Approval</button>
                        @if (showrecur)
                        {
                            <button id="" type="button" class="btn btn-info d-flex my-2 btnSaveRecur makeorder">@Resources.Resource.SaveAsRecurring</button>
                        }
                        <button id="" type="button" class="btn btn-success d-flex my-2 btnNewPurchase">@string.Format(Resources.Resource.NewFormat, Resources.Resource.Purchase)</button>
                    </div>
                }
            }
        }
        else if (Model.pstStatus.ToLower() == PurchaseStatus.order.ToString())
        {

            @Html.Partial("_NormalSaveBlk4Purchase", null, new ViewDataDictionary { { "editmode", editmode }, { "status", Model.pstStatus }, { "approvalmode", approvalmode } })
        }
    </div>
}

<div>
    @{
        string page = "Index";
    }
    @Html.ActionLink(Resources.Resource.BackToList, page)
</div>

@Html.Partial("_ItemModal", null, new ViewDataDictionary { { "currency", Model.Currency }, { "priceheader", Resources.Resource.UnitPrice }, { "forpurchase", true } })

@Html.Partial("_DescModal")

@Html.Partial("_WaitingModal")


@Html.Partial("_CurrencyModal")

@Html.Partial("_PurchaseBatchModal")
@Html.Partial("_PurchaseSerialModal")

@Html.Partial("_PoItemVariModal")

@Html.Partial("_TextAreaModal")

@{
    string UploadSizeLimitMB = ConfigurationManager.AppSettings["MaxUploadSize"];
    string exceeduploadfilelimittxt = string.Format(Resources.Resource.ExceedUploadSizeLimitWarning, UploadSizeLimitMB);
}
<div id="infoblk" data-jsonpurchaseitems="@Model.JsonPurchaseItems" data-supplierrequiredtxt="@string.Format(Resources.Resource.Required,Resources.Resource.Supplier)" data-locationrequiredtxt="@string.Format(Resources.Resource.Required,Resources.Resource.Location)" data-emptyitemwarning="@string.Format(Resources.Resource.EnterAtLeastOneFormat,Resources.Resource.ItemStock)" data-subtotal="@Model.SubTotal" data-disctotal="@Model.DiscTotal" data-total="@Model.Total" data-currencyrequiredtxt="@string.Format(Resources.Resource.Required, Resources.Resource.Currency)" data-priceeditable="@Model.PriceEditable" data-disceditable="@Model.DiscEditable" data-enabletax="@Model.EnableTax" data-enablesn="@Model.EnableSerialNo" data-jsondiccurrencyexrate="@Model.JsonDicCurrencyExRate" data-batchtxt="@Resources.Resource.Batch" data-sntxt="@Resources.Resource.SerialNoItemHeader" data-validthrutxt="@Resources.Resource.ValidThru" data-itemsrequiredtxt="@string.Format(Resources.Resource.Required,Resources.Resource.Item)" data-approvalmode="@approvalmode" data-whatsapplinkurl="@ConfigurationManager.AppSettings["WhatsappLinkUrl"]" data-isapprover="@isapprover" data-jsondiclocation="@Model.JsonDicLocation" data-shop="@Model.ComInfo.Shop" data-jsonjoblist="@Model.JsonJobList" data-uploadsizelimit="@ConfigurationManager.AppSettings["MaxUploadSizeBytes"]" data-uploadsizelimitmb="@ConfigurationManager.AppSettings["MaxUploadSize"]" data-filecode="@Model.pstCode" data-uploadurl="/Purchase/UploadFile" data-exceeduploadfilelimittxt="@exceeduploadfilelimittxt" data-uploadfilelist="@Model.UploadFileName" data-jsonpurchasedicitemoptions="@Model.JsonDicItemOptions" data-isadmin="@isadmin" data-dicitemgroupedvariations="@Model.JsonDicItemGroupedVariations"></div>



<script src="~/Scripts/ASPSnippets_Pager.min.js"></script>
<script src="~/Scripts/ts/js/purchase/purchaseedit.js?v=@rand"></script>


@Html.Partial("_UploadFileModal", null, new ViewDataDictionary { { "uploadUrl", "/Purchase/UploadFile" } })
@Html.Partial("_ViewFileModal", null, new ViewDataDictionary { { "imglist", Model.ImgList }, { "filelist", Model.FileList } })


