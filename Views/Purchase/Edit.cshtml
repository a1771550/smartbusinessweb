@model PurchaseEditModel

@{
	PurchaseModel Purchase = Model.Purchase;
	bool editmode = Purchase.pstStatus != PurchaseStatus.draft.ToString();
	string edittxt = editmode ? Resources.Resource.Edit : Resources.Resource.Add;
	ViewBag.Title = edittxt + " " + Resources.Resource.Purchase;
	int rand = CommonHelper.GetVersionRandomNo();
	long lastppId = 0;

	if (!editmode)
	{
		Purchase.pstSalesLoc = HttpContext.Current.Session["ComInfo"] == null ? "" : (HttpContext.Current.Session["ComInfo"] as ComInfo).Shop;
	}
	bool approvalmode = (bool)Purchase.ComInfo.ApprovalMode;
	var currency = Purchase.ComInfo.Currency;
	bool showrecur = false;
	SessUser user = System.Web.HttpContext.Current.Session["User"] as SessUser;
	bool isapprover = user.Roles.Any(x => x == RoleType.Admin || x == RoleType.SalesManager);
	bool ismanager = user.Roles.Any(x => x == RoleType.SalesManager);
	bool isadmin = user.Roles.Any(x => x == RoleType.Admin && x != RoleType.SalesManager);
}
<link rel="stylesheet" type="text/css" href="~/Scripts/jspreadsheet/dist/jexcel.css" />
<link rel="stylesheet" type="text/css" href="~/Scripts/jsuites/dist/jsuites.css" />
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/Content/purchase/edit.css?v=@rand" />

<h2 class="mb-4" data-status="@Purchase.pstStatus" data-editmode="@editmode" data-exrate="@Purchase.pstExRate" data-isadmin="@isadmin">@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Purchase", null, FormMethod.Post, new { @Id = "frmPurchase" }))
{
	@Html.AntiForgeryToken()
	<input id="Id" name="Id" type="hidden" value="@Purchase.Id" />
	<input id="pstCode" name="pstCode" type="hidden" value="@Purchase.pstCode" />
	<input id="pstType" name="pstType" type="hidden" value="@Purchase.pstType" />
	<input id="UseForexAPI" name="UseForexAPI" type="hidden" value="@Model.UseForexAPI" />
	<input id="pstSalesLoc" name="pstSalesLoc" type="hidden" value="@Purchase.pstSalesLoc" />
	<input id="pstAllLoc" name="pstAllLoc" type="hidden" value="@Purchase.pstAllLoc" />
	<input id="pstExRate" name="pstExRate" type="hidden" value="@Purchase.pstExRate" />
	<input id="pstAmount" name="pstAmount" type="hidden" value="@Purchase.pstAmount" />

	<div class="row justify-content-end my-4 px-4">
		<h5 id="status" class="">@Purchase.pstStatus.ToUpper()</h5>
		<input id="pstStatus" name="pstStatus" type="hidden" value="@Purchase.pstStatus" />
	</div>

	if (showrecur)
	{
		<button type="button" id="btnUseRecur" class="btn btn-outline-info my-2">@Resources.Resource.UseRecurring</button>
	}

	<div class="row">
		<div class="col-12 col-md-2">
			<div class="form-group">
				<label class="control-label">@string.Format(Resources.Resource.PurchaseFormat, Resources.Resource.Code)</label>

				<input type="text" class="form-control" id="pstCode" name="pstCode" value="@Purchase.pstCode" readonly />

			</div>
		</div>
		<div class="col-12 col-md-2">
			<div class="form-group required">
				<label class="control-label">@string.Format(Resources.Resource.DateFormat, Resources.Resource.Purchase)</label>

				<input type="datetime" class="form-control datepicker" id="purchaseDate" />
				<input data-val="true" id="pstPurchaseDate" name="pstPurchaseDate" type="hidden" value="@Purchase.pstPurchaseDate" />
				<input id="PurchaseDateDisplay" name="PurchaseDateDisplay" type="hidden" value="@Purchase.PurchaseDateDisplay" />


			</div>
		</div>

		@{
			var pstcurrency = Purchase.pstCurrency ?? "HKD";
		}
		<div class="col-12 col-md-2">
			@Html.Partial("_ExRateModal", null, new ViewDataDictionary { { "fieldname", "pstCurrency" }, { "currency", pstcurrency }, { "required", "required" }, { "exratestyle", "margin-top:-1rem;" } })
		</div>

		<div class="col-12 col-md-2">
			<div class="form-group required">
				<label class="control-label d-block" for="drpSupplier">@Resources.Resource.Supplier</label>

				<select id="drpSupplier" name="supCode" class="form-control card" data-supcode="@Purchase.supCode">
					<option value="">-- @Resources.Resource.Select --</option>
					@foreach (var item in Model.SupplierList)
					{
						var selected = Purchase.supCode == item.Value ? "selected" : "";
						<option value="@item.Value" @selected>@item.Text</option>
					}
				</select>

			</div>
		</div>
		<div class="col-12 col-md-2">
			<div class="form-group">
				<label class="control-label" for="pstSupplierInvoice">@Resources.Resource.SupplierInvoice</label>

				<input type="text" class="form-control" id="pstSupplierInvoice" name="pstSupplierInvoice" value="@Purchase.pstSupplierInvoice" />

			</div>
		</div>
		<div class="col-12 col-md-2">
			<div class="form-group required">
				<label class="control-label" for="drpLocation">@Resources.Resource.Location</label>

				<select id="drpLocation" name="pstSalesLoc" class="form-control" data-modellocation="@Purchase.pstSalesLoc">
					@* <option value="">-- @Resources.Resource.Select --</option>*@
					@foreach (var item in Model.LocationList)
					{
						string selected = Purchase.pstSalesLoc == item.Value ? "selected" : "";
						<option value="@item.Value" @selected>@item.Text</option>
					}
				</select>
				@{ var _checked = editmode && Purchase.pstAllLoc != null ? (bool)Purchase.pstAllLoc ? "checked" : "" : "";}
				@Html.Partial("_ApplyToAllSalesLocation", null, new ViewDataDictionary { { "checked", _checked } })

			</div>
		</div>
	</div>

	<div class="d-flex justify-content-center my-4" data-status="@Purchase.pstStatus" data-enabletax="@Model.EnableTax" data-inclusivetax="@(Model.InclusiveTax)">
		@{ string tbodycls = Purchase.pstStatus == PurchaseStatus.opened.ToString() ? "small" : "";}
		<table id="tblPSI" class="jexcel" cellpadding="0" cellspacing="0" style="width:100%;">
			<thead class="resizable">
				<tr class="">
					<td style="width:50px;max-width:50px;" class=""></td>
					<td title="@Resources.Resource.ItemCode" style="text-align: center;width:100px;">@Resources.Resource.ItemCode</td>
					<td title="@Resources.Resource.ItemName" style="text-align: center;width:100px;">@Resources.Resource.ItemName</td>
					<td title="@Resources.Resource.BaseUnit" style="text-align: right; width: 70px;min-width:70px;">@Resources.Resource.BaseUnit</td>
					<td title="@Resources.Resource.Qty" style="text-align: right; width: 80px;">@Resources.Resource.Qty</td>
					@if (Purchase.pstStatus == PurchaseStatus.opened.ToString() || Purchase.pstStatus == PurchaseStatus.partialreceival.ToString())
					{
						<td title="@Resources.Resource.Batch" style="text-align: center; width: 100px;">@Resources.Resource.Batch</td>
						<td title="@Resources.Resource.SerialNo" style="text-align: center; width: 100px;">@Resources.Resource.SerialNoItemHeader</td>
						<td title="@Resources.Resource.ExpiryDate" style="text-align: center; width: 100px;">@Resources.Resource.ExpiryDate</td>
						<td title="@Resources.Resource.ItemVariations" style="text-align: center; width: 100px;">@Resources.Resource.ItemVariations</td>
					}
					<td style="text-align: right; width: 100px;">@Resources.Resource.UnitPrice (@Purchase.Currency)</td>
					<td title="@Resources.Resource.DiscPc" style="text-align: right; width: 100px;">@Resources.Resource.DiscPc</td>
					@if (Model.EnableTax && !Model.InclusiveTax)
					{
						<td title="@Resources.Resource.Tax" style="text-align: right; width: 100px;">@Resources.Resource.TaxItemHeader</td>
					}
					<td class="text-center" style="width: 100px;">@Resources.Resource.Location</td>
					<td class="text-center" style="width: 100px;">@Resources.Resource.Job4Myob</td>
					<td title="@Resources.Resource.Amount" style="text-align: right; width: 100px;">@Resources.Resource.Amount (@Purchase.Currency)</td>
					@if (Purchase.pstStatus == PurchaseStatus.opened.ToString() || Purchase.pstStatus == PurchaseStatus.partialreceival.ToString())
					{
						<td title="@Resources.Resource.ReceivedQty" style="text-align: right;width:90px!important;">@Resources.Resource.ReceivedQty</td>
					}
				</tr>
			</thead>
			<tbody class="@tbodycls"></tbody>
		</table>
	</div>

	var decimaltotal = CommonHelper.FormatNumber(Purchase.Total);

	if (Purchase.pstStatus == "opened")
	{
		<div class="my-5">

			<h3 class="font-weight-bold clearfix">
				@Resources.Resource.Payment
				<button type="button" id="btnAdd" class="btn btn-primary float-right btnsmall50" title="@string.Format(Resources.Resource.AddFormat, Resources.Resource.Payment)"><i class="fa fa-plus"></i></button>
			</h3>

			<table id="tblPayment" class="table table-condensed table-hover table-bordered">
				<thead class="gray-header">
					<tr>
						<th style="width:50px;max-width:50px;"></th>
						<th class="text-center">@Resources.Resource.ReceiptNo</th>
						<th class="text-center">@Resources.Resource.AccountClassification</th>
						<th class="text-center">@Resources.Resource.CollectionAccount (@Resources.Resource.AccountNo)</th>
						<th class="text-right" style="width:120px;max-width:120px;">@Resources.Resource.Amount (@Purchase.Currency)</th>
						<th class="text-right" style="width:120px;max-width:120px;">@string.Format(Resources.Resource.DateFormat, Resources.Resource.Payment)</th>
						<th class="text-center">@Resources.Resource.File</th>
						<th class="text-right">@Resources.Resource.OperationTime</th>
						<th class="text-center">@Resources.Resource.PersonInCharge</th>
						<th></th>
					</tr>
				</thead>

				<tbody>
					@{int idx = 0; lastppId = Model.PurchasePayments.Count > 0 ? Model.PurchasePayments.Max(x => x.Id) : 0;}
					@foreach (var payment in Model.PurchasePayments)
					{
						idx++;

						string selectedA = payment.AcClfID == "A" ? "selected" : "";
						string selectedL = payment.AcClfID == "L" ? "selected" : "";
						string selectedEQ = payment.AcClfID == "EQ" ? "selected" : "";
						string selectedI = payment.AcClfID == "I" ? "selected" : "";
						string selectedCOS = payment.AcClfID == "COS" ? "selected" : "";
						string selectedEXP = payment.AcClfID == "EXP" ? "selected" : "";
						string selectedOI = payment.AcClfID == "OI" ? "selected" : "";
						string selectedOEXP = payment.AcClfID == "OEXP" ? "selected" : "";

						<tr data-id="@payment.Id">
							<td class="text-center">@idx</td>
							<td class="text-center"><input type="text" class="form-control chequeno text-center" maxlength="8" value="@payment.ChequeNo" /></td>
							<td class="text-center" data-acclfid="@payment.AcClfID">

								<select class="drpAccount form-control flex">
									<option value="">- @Resources.Resource.Select -</option>
									<option value="A" @selectedA>@Resources.Resource.AssetAccountForItemInventory</option>
									<option value="L" @selectedL>@Resources.Resource.Liability</option>
									<option value="EQ" @selectedEQ>@Resources.Resource.Equity</option>
									<option value="I" @selectedI>@Resources.Resource.IncomeAccountForTrackingSales</option>
									<option value="COS" @selectedCOS>@Resources.Resource.CostOfSalesAccount</option>
									<option value="EXP" @selectedEXP>@Resources.Resource.Expense</option>
									<option value="OI" @selectedOI>@Resources.Resource.OtherIncome</option>
									<option value="OEXP" @selectedOEXP>@Resources.Resource.OtherExpense</option>
								</select>
							</td>
							<td class="text-center"><span class="accountno acname" data-acno="@payment.AccountNo" data-acname="@payment.AccountName">@payment.AccountName (@payment.AccountNo)</span></td>
							<td class="text-right"><input type="number" class="form-control pay text-right" data-id="@payment.Id" value="@CommonHelper.FormatNumber(payment.Amount)" /></td>
							<td class="text-right">
								<input type="datetime" class="form-control datepicker ppdate" name="ppDate" value="@payment.ppDate" />
								<input type="hidden" class="datedisplay" value="@payment.DateDisplay" />
							</td>
							<td class="text-left text-wrap">
								@if (!string.IsNullOrEmpty(payment.fileName))
								{
									var filelist = payment.fileName.Split(',').ToList();
									@Html.Partial("_ViewFileModal", null, new ViewDataDictionary { { "filelist", filelist } })
								}

							</td>
							<td class="text-right">@payment.CreateTimeDisplay</td>
							<td class="text-center">@payment.CreateByDisplay</td>
							<td>
								<button type="button" class="btn btn-success btnsmall80 btnSave mr-1" data-id="@payment.Id" title="@string.Format(Resources.Resource.SaveFormat, Resources.Resource.Payment)"><i class="fa fa-save"></i></button>
								<button type="button" class="btn btn-warning btnsmall80 btnUpload mr-1" data-id="@payment.Id" title="@Resources.Resource.UploadFile"><i class="fa fa-upload"></i></button>
								<button type="button" class="btn btn-danger btnsmall80 btnVoid mr-1" data-id="@payment.Id" title="@Resources.Resource.UploadFile"><i class="fa fa-trash"></i></button>
							</td>
						</tr>
					}

				</tbody>
				<tfoot style="background:#eee;">
					<tr>
						<td colspan="10" class="text-right">
							@{
								decimal totalowed = (decimal)Purchase.pstAmount - Model.PurchasePayments.Sum(x => x.Amount);
								string totalowedtxt = CommonHelper.FormatNumber(totalowed);
								string amtcls = totalowed > 0 ? "text-danger" : "text-success";
							}
							<form class="form-inline" style="font-size:1.15em;">
								<label for="totalowed" class="mx-2">@string.Format(Resources.Resource.TotalFormat, Resources.Resource.Owed):</label>
								<span class="font-weight-bold">@Purchase.Currency<span class="@amtcls" id="totalowed" data-num="@totalowed">@totalowedtxt</span></span>

							</form>
						</td>
					</tr>
				</tfoot>
			</table>
		</div>
	}

	<div class="row justify-content-between">
		<div class="col-12 col-md-10">
			@Html.Partial("_ViewFileBlk", null, new ViewDataDictionary { { "imglist", Purchase.ImgList }, { "filelist", Purchase.FileList } })
		</div>
		<div class="col-12 col-md-2">
			<div class="clearfix">
				<div class="float-right">
					<div class="form-group text-left">
						<label for="txtTotal" class="">@Resources.Resource.TotalAmount (@Purchase.Currency)</label>
						<input type="number" class="form-control text-left" id="txtTotal" readonly name="TotalAmount" value="@decimaltotal" />
					</div>
					<div class="form-group text-left">
						<label class="">@Resources.Resource.PromisedDate</label>
						<input type="datetime" class="form-control datepicker" id="promisedDate" />
						<input data-val="true" id="pstPromisedDate" name="pstPromisedDate" type="hidden" value="@Purchase.pstPromisedDate" />
						<input id="PromisedDateDisplay" name="PromisedDateDisplay" type="hidden" value="@Purchase.PromisedDateDisplay" />
					</div>

					<div class="form-group text-left">
						<label class="control-label" for="pstRemark">@Resources.Resource.Remark</label>
						<textarea class="form-control" id="pstRemark" name="pstRemark" rows="5">@Purchase.pstRemark</textarea>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div id="btnblk" class="row justify-content-end px-4" data-approvalmode="@approvalmode" data-isapprover="@isapprover" data-editmode="@editmode" data-status="@Purchase.pstStatus" data-ismanager="@ismanager">

		@if (approvalmode)
		{
			<input type="hidden" id="mode" value="@Purchase.Mode" />

			if (isapprover)
			{
				if (Request.QueryString["ireadonly"] != null && Request.QueryString["ireadonly"] == "1")
				{
					<div class="d-none d-md-block text-right">
						<button type="button" id="" class="btn btn-primary mr-2 respond btnApprove" data-type="approve" data-code="">@Resources.Resource.Approve</button>
						<button type="button" id="" class="btn btn-danger mr-4 respond btnReject" data-type="reject" data-code="">@Resources.Resource.Reject</button>
					</div>
					<div class="d-block d-md-none">
						<button type="button" id="" class="btn btn-primary d-flex respond btnApprove" data-type="approve" data-code="">@Resources.Resource.Approve</button>
						<button type="button" id="" class="btn btn-danger d-flex respond btnReject" data-type="reject" data-code="">@Resources.Resource.Reject</button>
					</div>
				}

				if (ismanager && Purchase.pstStatus.ToLower() == PurchaseStatus.order.ToString() || Purchase.pstStatus.ToLower() == PurchaseStatus.created.ToString() || Purchase.pstStatus.ToLower() == PurchaseStatus.opened.ToString())
				{
					@Html.Partial("_NormalSaveBlk4Purchase", null, new ViewDataDictionary { { "editmode", editmode }, { "showViewBtn", Purchase.FileList.Count > 0 }, { "status", Purchase.pstStatus }, { "approvalmode", approvalmode } })
				}

			}
			else
			{
				if (editmode && (Purchase.pstStatus.ToLower() == PurchaseStatus.order.ToString() || Purchase.pstStatus.ToLower() == PurchaseStatus.created.ToString() || Purchase.pstStatus.ToLower() == PurchaseStatus.rejected.ToString()))
				{
					<div class="text-right">
						@Html.Partial("_NormalSaveBlk4Purchase", null, new ViewDataDictionary { { "editmode", editmode }, { "showViewBtn", Purchase.FileList.Count > 0 }, { "status", Purchase.pstStatus }, { "approvalmode", approvalmode } })
					</div>
				}
				else if (!editmode)
				{
					<div class="d-none d-md-block text-right">
						<button id="" type="button" class="btn btn-primary ml-3 my-2 request makeorder btnRequestApproval" style="height:5em;">@Resources.Resource.Request4Approval</button>
						@if (showrecur)
						{
							<button id="" type="button" class="btn btn-info ml-3 my-2 btnSaveRecur makeorder">@Resources.Resource.SaveAsRecurring</button>
						}

						@if (Purchase.pstStatus != PurchaseStatus.draft.ToString())
						{
							<button id="" type="button" class="btn btn-success ml-3 my-2 btnNewPurchase">@string.Format(Resources.Resource.NewFormat, Resources.Resource.Purchase)</button>
						}

					</div>

					<div class="d-block d-sm-block d-md-none text-right">
						<button id="" type="button" class="btn btn-primary d-flex my-2 request btnRequestApproval makeorder">@Resources.Resource.Request4Approval</button>
						@if (showrecur)
						{
							<button id="" type="button" class="btn btn-info d-flex my-2 btnSaveRecur makeorder">@Resources.Resource.SaveAsRecurring</button>
						}

						@if (Purchase.pstStatus != PurchaseStatus.draft.ToString())
						{
							<button id="" type="button" class="btn btn-success d-flex my-2 btnNewPurchase">@string.Format(Resources.Resource.NewFormat, Resources.Resource.Purchase)</button>
						}

					</div>
				}
			}
		}
		else if (Purchase.pstStatus.ToLower() == PurchaseStatus.order.ToString())
		{

			@Html.Partial("_NormalSaveBlk4Purchase", null, new ViewDataDictionary { { "editmode", editmode }, { "showViewBtn", Purchase.FileList.Count > 0 }, { "status", Purchase.pstStatus }, { "approvalmode", approvalmode }, { "showViewBtn", Purchase.FileList.Count > 0 } })
		}
	</div>
}

<div>
	@{
		string page = "Index";
	}
	@Html.ActionLink(Resources.Resource.BackToList, page)
</div>

@Html.Partial("_VoidPaymentModal")

@Html.Partial("_AccountModal")

@Html.Partial("_ItemModal", null, new ViewDataDictionary { { "currency", Purchase.Currency }, { "priceheader", Resources.Resource.UnitPrice }, { "forpurchase", true } })

@Html.Partial("_DescModal")

@Html.Partial("_WaitingModal")


@Html.Partial("_CurrencyModal")

@Html.Partial("_PurchaseBatchModal")
@Html.Partial("_PurchaseSerialModal")

@Html.Partial("_PoItemVariModal")

@Html.Partial("_TextAreaModal")

@{
	string UploadSizeLimitMB = ConfigurationManager.AppSettings["MaxUploadSize"];
	string exceeduploadfilelimittxt = string.Format(Resources.Resource.ExceedUploadSizeLimitWarning, UploadSizeLimitMB);
}
<div id="infoblk" data-isadmin="@isadmin" data-jsonpurchaseitems="@Purchase.JsonPurchaseItems" data-supplierrequiredtxt="@string.Format(Resources.Resource.Required,Resources.Resource.Supplier)" data-locationrequiredtxt="@string.Format(Resources.Resource.Required,Resources.Resource.Location)" data-emptyitemwarning="@string.Format(Resources.Resource.EnterAtLeastOneFormat,Resources.Resource.ItemStock)" data-subtotal="@Purchase.SubTotal" data-disctotal="@Purchase.DiscTotal" data-total="@Purchase.Total" data-currencyrequiredtxt="@string.Format(Resources.Resource.Required, Resources.Resource.Currency)" data-priceeditable="@Model.PriceEditable" data-disceditable="@Model.DiscEditable" data-enabletax="@Model.EnableTax" data-enablesn="@Model.EnableSerialNo" data-jsondiccurrencyexrate="@Model.JsonDicCurrencyExRate" data-batchtxt="@Resources.Resource.Batch" data-sntxt="@Resources.Resource.SerialNoItemHeader" data-validthrutxt="@Resources.Resource.ValidThru" data-itemsrequiredtxt="@string.Format(Resources.Resource.Required,Resources.Resource.Item)" data-approvalmode="@approvalmode" data-whatsapplinkurl="@ConfigurationManager.AppSettings["WhatsappLinkUrl"]" data-isapprover="@isapprover" data-jsondiclocation="@Model.JsonDicLocation" data-shop="@Purchase.ComInfo.Shop" data-jsonjoblist="@Model.JsonJobList" data-uploadsizelimit="@ConfigurationManager.AppSettings["MaxUploadSizeBytes"]" data-uploadsizelimitmb="@ConfigurationManager.AppSettings["MaxUploadSize"]" data-filecode="@Purchase.pstCode" data-uploadurl="/Purchase/UploadFile" data-exceeduploadfilelimittxt="@exceeduploadfilelimittxt" data-uploadfilelist="@Purchase.UploadFileName" data-jsonpurchasedicitemoptions="@Purchase.JsonDicItemOptions" data-dicitemgroupedvariations="@Purchase.JsonDicItemGroupedVariations" data-user="@JsonSerializer.Serialize(Model.User)" data-dicacaccounts="@JsonSerializer.Serialize(Model.DicAcAccounts)" data-savepaymenttxt="@string.Format(Resources.Resource.SaveFormat, Resources.Resource.Payment)" data-lastppid="@lastppId" data-purchasepayments="@JsonSerializer.Serialize(Model.PurchasePayments)" data-apid="@Model.AccountProfileId"></div>



<script src="~/Scripts/ASPSnippets_Pager.min.js"></script>
<script src="~/Scripts/ts/js/purchase/purchaseedit.js?v=@rand"></script>


@Html.Partial("_UploadFileModal", null, new ViewDataDictionary { { "uploadUrl", "/Purchase/UploadFile" } })



