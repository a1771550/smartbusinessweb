@model PPWLib.Models.WholeSales.WholeSalesEditModel

@using PagedList.Mvc;
@{

	int rand = CommonHelper.GetVersionRandomNo();
}

<h2>@ViewBag.Title</h2>

<p class="my-3">
	@if (Model.ListMode == WholeSalesStatus.all)
	{
		Html.ActionLink(string.Format(Resources.Resource.NewFormat, Resources.Resource.Quotation), "Edit", new { Id = 0, type = "quote" }, new { @class = "btn btn-info mx-2" });
		Html.ActionLink(string.Format(Resources.Resource.NewFormat, Resources.Resource.SalesOrder), "Edit", new { Id = 0, type = "order" }, new { @class = "btn btn-info" });
	}
</p>


@using (Html.BeginForm("Index", "WholeSales", FormMethod.Get, new { @Id = "frmWholeSales" }))
{

	<div class="float-right"><a role="button" class="btn btn-primary btnexsmall my-2" href="/WholeSales/Edit/0" title="@string.Format(Resources.Resource.AddFormat,Resources.Resource.WholeSales)"><i class="fa fa-plus"></i></a></div>

	if (Model.PagingWSList == null)
	{
		@Html.Partial("_NoRecordFound"); return;
	}

	<div class="row justify-content-center py-3">
		@Html.Partial("_DatesRange", null, new ViewDataDictionary { { "DateFromTxt", Model.DateFromTxt }, { "DateToTxt", Model.DateToTxt } })
	</div>

	<div class="d-flex justify-content-center form-inline my-4">
		<div class="form-group">
			<input type="text" class="form-control" id="txtKeyword" placeholder="@Resources.Resource.KeywordRequired" />
			<button id="btnSearch" type="button" class="btn btn-primary ml-4">@Resources.Resource.Search</button>
			<button id="btnReload" type="button" class="btn btn-warning ml-4">@Resources.Resource.Reload</button>
		</div>
	</div>

	<table id="tblWholeSales" class="table table-bordered  table-hover table-condensed">
		<colgroup>
			<col width="100">
			<col width="100">
			<col width="100">
			@if (Model.ListMode == WholeSalesStatus.all)
			{
				<col width="60">
			}

			<col width="100">
			<col width="100">
			@if (CultureHelper.CurrentCulture == 2)
			{
				<col width="140">
				<col width="170" />
			}
			else
			{
				<col width="120">
				<col width="140" />
			}

		</colgroup>
		<thead class="gray-header">
			<tr>
				<th class="text-center colheader" data-col="0" data-keyword="@Model.Keyword">@Resources.Resource.Code</th>
				<th class="text-center colheader" data-col="1" data-keyword="@Model.Keyword">@Resources.Resource.Customer</th>
				<th class="text-center colheader" data-col="2" data-keyword="@Model.Keyword">@Resources.Resource.Location</th>
				@if (Model.ListMode == WholeSalesStatus.all)
				{
					<th class="text-center colheader" data-col="3" data-keyword="@Model.Keyword">@Resources.Resource.Status</th>
				}

				<th class="text-center colheader" data-col="4" data-keyword="@Model.Keyword"><span class="font-weight-bold">@string.Format(Resources.Resource.DateFormat, Resources.Resource.WholeSales)</span></th>
				<th class="text-center colheader" data-col="5" data-keyword="@Model.Keyword"><span class="font-weight-bold">@Resources.Resource.DeliveryDate</span></th>
				<th></th>
				<th>@Resources.Resource.Print</th>
			</tr>
		</thead>
		@{ string status = "";}
		@foreach (var item in Model.PagingWSList)
		{
			string bgcls = "";
			string approvedisabled = "";
			string rejectdisabled = "";
			string voiddisabled = "";
			//string passdisabled = "";
			string btncls = item.wsType == "WS" ? "" : "disabled";
			string statustxt = "";
			string _readonly = "1";

			if (item.wsStatus == "REQUESTING" && item?.wsSpecialApproval != null && (bool)item?.wsSpecialApproval)
			{
				bgcls = "requesting_sp_statusbg";
				statustxt = "特批申請中";
				_readonly = "0";
			}
			else
			{
				switch (item.wsStatus)
				{
					case "VOIDED":
						bgcls = "voidedstatusbg";
						voiddisabled = "disabled";
						statustxt = Resources.Resource.Voided;
						break;
					case "PASSED":
						bgcls = "passedstatusbg";
						//passdisabled = "disabled";
						statustxt = "經理待批";
						break;
					case "deliver":
						bgcls = "deliverstatusbg";
						statustxt = Resources.Resource.Delivered;
						break;
					case "created":
					case "CREATED":
						bgcls = "createdstatusbg";
						statustxt = Resources.Resource.Ready4Delivery;
						break;
					case "order":
					case "APPROVED":
						bgcls = item?.wsSpecialApproval != null && (bool)item?.wsSpecialApproval ? "approved_sp_statusbg" : "approvedstatusbg";
						approvedisabled = "disabled";
						rejectdisabled = "disabled";
						voiddisabled = "disabled";
						//passdisabled = "disabled";
						statustxt = item?.wsSpecialApproval != null && (bool)item?.wsSpecialApproval ? "特批已批核" : Resources.Resource.Approved;
						break;
					case "REJECTED":
						bgcls = "rejectedstatusbg";
						rejectdisabled = "disabled";
						statustxt = Resources.Resource.Rejected;
						break;
					case "KPENDING":
						bgcls = "kpendingstatusbg";
						statustxt = "期貨單";
						break;
					case "draft":
						bgcls = "draftstatusbg";
						statustxt = Resources.Resource.Draft;
						break;
					default:
					case "REQUESTING":
						bgcls = "requestingstatusbg";
						statustxt = Resources.Resource.Requesting4Approval;
						_readonly = "0";
						break;
				}
			}
			<tr>
				<td class="text-center">
					@Html.DisplayFor(modelWholeSales => item.wsCode)
				</td>

				<td class="text-center">
					@Html.DisplayFor(modelWholeSales => item.CustomerName)
				</td>

				<td class="text-center">
					@Html.DisplayFor(modelWholeSales => item.wsSalesLoc)
				</td>
				@if (Model.ListMode == WholeSalesStatus.all)
				{
					//status = item.wsStatus == "CREATED" ? "order" : item.wsStatus;
					//string bgcls = string.Concat(status.ToLower(), "bg");
					<td class="text-center @bgcls">
						@statustxt
					</td>
				}

				<td class="text-center">
					@Html.DisplayFor(modelWholeSales => item.WsDateDisplay)
				</td>
				<td class="text-center">
					@Html.DisplayFor(modelWholeSales => item.DeliveryDateDisplay)
				</td>
				<td>
					@{var edittxt = item.wsStatus == WholeSalesStatus.order.ToString() ? Resources.Resource.Edit : Resources.Resource.Detail;}
					<a class="btn btn-info edit mx-1 btnsmall" role="button" href="/WholeSales/Edit?Id=@item.wsUID&status=@item.wsStatus&ireadonly=@_readonly">@edittxt</a>
					<a class="btn btn-danger remove btnsmall" role="button" href="#" data-id="@item.wsUID">@Resources.Resource.Remove</a>
				</td>
				<td>
					@if (item.wsStatus == WholeSalesStatus.deliver.ToString() || item.wsStatus == WholeSalesStatus.partialdeliver.ToString())
					{
						<a class="btn btn-primary print mx-1 btnsmall" role="button" href="/WholeSales/Print?Id=@item.wsUID&type=@item.wsStatus" target="_blank"><span class="">@Resources.Resource.Invoice</span></a>
						<a class="btn btn-primary print btnsmall" role="button" href="/WholeSales/Print?Id=@item.wsUID&type=@WholeSalesStatus.deliverorder.ToString()" target="_blank"><span class="">@Resources.Resource.DeliveryOrder</span></a>
					}
					else
					{
						if (status == "order")
						{
							<a class="btn btn-primary print mx-1 btnsmall" role="button" href="/WholeSales/Print?Id=@item.wsUID&type=@item.wsStatus" target="_blank"><span class="">@Resources.Resource.WholeSaleOrder</span></a>
						}
					}
				</td>
			</tr>
		}

	</table>

	<div id="pagingblk" class="my-3">
		
			@Html.PagedListPager(Model.PagingWSList, PageNo => Url.Action("Index",
	new { PageNo, SortOrder = Model.CurrentSortOrder, Keyword = Model.Keyword }))
		
		<input type="hidden" id="sortorder" name="SortOrder" value="@Model.SortOrder" />
		<input type="hidden" id="sortcol" value="@Model.SortCol" />
	</div>
}
@Html.AntiForgeryToken()

@Html.Partial("_WaitingModal")

<div id="infoblk" class="hide"></div>
<script type="text/javascript" src="~/Scripts/daterangepicker/moment.min.js"></script>
<script type="text/javascript" src="~/Scripts/daterangepicker/daterangepicker.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/Scripts/daterangepicker/daterangepicker.css" />

<script>
	$(document).on('click', '#btnPrintPreview', function () {
		let url = `/WholeSales/Print?strfrmdate=${$('#datetimesmin').val()}&strtodate=${$('#datetimesmax').val()}&Keyword=${$('#txtKeyword').val()}`;
		window.open(url, '_blank');
	});
	$(function () {
		initDatePickers(StartDayEnum.LastMonth, 'YYYY-MM-DD');
	});
</script>
<script src="~/Scripts/ts/js/wholesales/index.js?v=@rand"></script>




