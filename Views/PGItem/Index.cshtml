@model PPWLib.Models.Item.PGItemEditModel
@using PagedList.Mvc;
@{
    ViewBag.Title = string.Format(Resources.Resource.NewFormat, Resources.Resource.Item);
    int rand = CommonHelper.GetVersionRandomNo();
}

<h2>@ViewBag.Title</h2>
<p class="my-3">
    @Html.ActionLink(Resources.Resource.Add, "Edit", new { Id = 0 }, new { @class = "btn btn-info" })
</p>

@using (Html.BeginForm("Index", "PGItem", FormMethod.Get, new { @Id = "frmPGItem" }))
{
    @Html.AntiForgeryToken()
    <div class="form-inline mb-2 my-4">
        <div class="form-group">
            <input type="text" class="form-control" id="txtKeyword" name="Keyword" placeholder="@Resources.Resource.KeywordRequired" />
            <button id="btnSearch" type="submit" class="btn btn-success ml-4">@Resources.Resource.Search</button>

            <button id="btnReload" type="button" class="btn btn-warning ml-4">@Resources.Resource.Reload</button>
        </div>
    </div>

    <div id="norecord" class="alert alert-warning hide">@Resources.Resource.NoDataFound</div>
    <table id="tblPGItem" class="table table-bordered  table-hover table-condensed" style="width:110%;">
        <thead class="gray-header">
            <tr>
                <th scope="col" class="text-center colheader" data-col="0" data-keyword="@Model.Keyword">@Resources.Resource.ItemCode</th>
                <th scope="col" class="text-center colheader" data-col="1" data-keyword="@Model.Keyword"><span class="font-weight-bold small">@Resources.Resource.Name/@Resources.Resource.Description</span></th>

                @*@if (!Model.NonABSS)
                {
                    <th scope="col" class="text-center">ABSS</th>
                }*@

                <th scope="col" class="text-center colheader" data-col="2" data-keyword="@Model.Keyword">@Resources.Resource.CreateTime</th>
                <th scope="col" class="text-center colheader" data-col="3" data-keyword="@Model.Keyword">@Resources.Resource.ModifyTime</th>

                <th scope="col"></th>

            </tr>
        </thead>


        @foreach (var item in Model.PagingPGItemList)
        {
            var namedesctxt = item.NameDesc.Length > 40 ? item.NameDesc.Substring(0, 40) + "..." : item.NameDesc;
            <tr>

                <td style="width:110px;max-width:110px;" class="text-center">@item.itmCode</td>
                <td style="width:100px;max-width:100px;" class="text-center itemdesc" data-desc="@item.NameDesc">@namedesctxt</td>
                @*@if (!Model.NonABSS)
                {
                    <td style="width:110px;max-width:110px;" class="text-center">@item.AccountProfileName</td>
                }*@

                <td style="width:120px;max-width:120px;" class="text-center">@item.CreateTimeDisplay</td>
                <td style="width:120px;max-width:120px;" class="text-center">@item.ModifyTimeDisplay</td>

                <td style="width:125px;max-width:125px;">
                    <a class="btn btn-info" role="button" href="/PGItem/Edit?itemId=@item.itmItemID"><span class="small">@Resources.Resource.Edit</span></a>                
                    <a class="btn btn-outline-danger itemremove" role="button" href="#" data-id="@item.itmItemID"><span class="small">@Resources.Resource.Remove</span></a>
                </td>
            </tr>
        }

    </table><div id="pagingblk" class="mx-3">
        <div class="row">

            @Html.PagedListPager(Model.PagingPGItemList, PageNo => Url.Action("Index",
new { PageNo, SortOrder = Model.CurrentSortOrder, Keyword = Model.Keyword }))


        </div>
    </div>

    <input type="hidden" name="SortOrder" id="sortorder" value="@Model.SortOrder" />
    <input type="hidden" id="sortcol" value="@Model.SortCol" />
}

@Html.Partial("_WaitingModal")

@Html.Partial("_DescModal")

<div id="infoblk"></div>

<script src="~/Scripts/ts/js/item/pgitem.js?v=@rand"></script>
