@model CustomerEditModel
@{
	string plsentertxt = string.Format(Resources.Resource.PlsEnterFormat, string.Format(string.Format(Resources.Resource.ValueFormat, string.Format(Resources.Resource.AllFormat, string.Format(Resources.Resource.DropDownFormat, Resources.Resource.CustomAttribute)))));

	var Customer = Model.Customer;
	bool edit = Customer.cusCustomerID > 0;

	ViewBag.Title = edit ? string.Format(Resources.Resource.EditFormat, Resources.Resource.Customer) : string.Format(Resources.Resource.AddFormat, Resources.Resource.Customer);

	int rand = CommonHelper.GetVersionRandomNo();
	string mandatory = Resources.Resource.StarMarkedMandatory.Replace("*", "<span class='asterisk'>*</span>");
	string _organchecked = Customer.cusIsOrganization ? "checked" : "";
	string _indivchecked = Customer.cusIsOrganization ? "" : "checked";
	string _checked = "checked";

	string maxcharlength4conametxt = string.Format("({0})", string.Format(Resources.Resource.MaxChar, ConfigurationManager.AppSettings["MaxCoNameLength"]));
	string maxcharlength4codetxt = string.Format("({0})", string.Format(Resources.Resource.MaxChar, ConfigurationManager.AppSettings["MaxCardCodeLength"]));
	string _readonly = Customer.cusCheckout!=null&&(bool)Customer.cusCheckout ? "readonly" : "";
	var enteratleasttxt = string.Format(Resources.Resource.EnterAtLeastOneFormat, Resources.Resource.Item);
	//string callCode = ConfigurationManager.AppSettings["DefaultCallCode"];
}
<link href="~/Content/select2/custom.css?v=@rand" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="~/Content/customer/edit.css?v=@rand" />

<h2 data-filelistcount="@Customer.FileList.Count()">@ViewBag.Title</h2>
@using (Html.BeginForm("Edit", "Customer", FormMethod.Get, new { @Id = "frmCustomer" }))
{
    @Html.AntiForgeryToken()

    <h6>@Html.Raw(mandatory)</h6>
    @*<p class="alert-danger small col-3">@nospecialcharsallowedtxt</p>*@

<div class="form-horizontal my-4">

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })

	<input type="hidden" id="cusCustomerID" name="cusCustomerID" value="@Customer.cusCustomerID" />
	<input type="hidden" id="cusCode" name="cusCode" value="@Customer.cusCode" />

	<div class="row">
		<div class="col-12 col-md-4">
			<div class="form-group">
				<label class="control-label" for="PaymentIsDue">@Resources.Resource.PaymentIsDue</label>

				@Html.DropDownListFor(model => Customer.PaymentIsDue, Model.TermsOfPaymentList as SelectList, new { @class = "form-control",@id="PaymentIsDue" })

			</div>
		</div>
		<div class="col-12 col-md-4">
			<div class="form-group">
				<label class="control-label" for="BalanceDueDays">@Resources.Resource.BalanceDueDays</label>

				<input type="number" class="form-control" id="BalanceDueDays" name="BalanceDueDays" value="@Customer.BalanceDueDays" />

			</div>
		</div>
		<div class="col-12 col-md-4">

		</div>
	</div>

	<hr />

	<div class="row">
		<div class="col-12 col-md-3">
			<div id="colastname" class="form-group required" data-customernull="@(Customer==null)">
				<label class="control-label " for="cusName">@Resources.Resource.Name</label>

				<input type="text" class="form-control" maxlength="@ConfigurationManager.AppSettings["MaxCoNameLength"]" id="cusName" name="cusName" value="@Customer.cusName" @_readonly />
				<span class="danger small d-block">@maxcharlength4conametxt</span>
				@if (edit)
				{
					<span class="danger small d-block">@string.Format(Resources.Resource.ABSSNameNotModifiableAfterUploaded, Resources.Resource.Customer)</span>
				}

			</div>			
		</div>
		<div class="col-12 col-md-3">

			<div class="form-group required">
				<label class="control-label " for="cusPhone">@Resources.Resource.Phone</label>
				<input type="text" class="form-control" id="cusPhone" name="cusPhone" maxlength="@int.Parse(ConfigurationManager.AppSettings["MaxCardCodeLength"])" value="@Customer.PhoneDisplay" />
				<span class="danger small">@maxcharlength4codetxt</span>
			</div>

		</div>
		<div class="col-12 col-md-3">
			<div class="form-group required">
				<label class="control-label " for="cusContact">@Resources.Resource.Contact</label>

				<input type="text" class="form-control" id="cusContact" name="cusContact" value="@Html.Raw(Customer.cusContact)" />

			</div>
		</div>
		<div class="col-12 col-md-3">
			<div class="form-group">
				<label class="control-label" for="cusEmail">@Resources.Resource.Email</label>
				<input type="email" class="form-control email" id="cusEmail" name="cusEmail" maxlength="255" value="@Customer.cusEmail" />
			</div>
		</div>
	</div>

	<div class="row">
		<div class="col-12 col-md-3">
			<div class="form-group">				
				@Html.Partial("_DrpCity", null, new ViewDataDictionary { { "edit", edit }, { "SelectedCity", Customer.cusAddrCity } })
				<input type="hidden" id="city" name="cusAddrCity" value="@Customer.cusAddrCity" />
			</div>
		</div>
		<div class="col-12 col-md-3" data-country="@(string.IsNullOrEmpty(Customer.cusAddrCountry))">			
			<div class="form-group">
				@Html.Partial("_DrpCountry", null, new ViewDataDictionary { { "edit", edit }, { "Countries", Model.DefaultCountries }, { "SelectedCountry", Customer.cusAddrCountry } })
				<input type="hidden" id="cusAddrCountry" name="cusAddrCountry" value="@Customer.cusAddrCountry" />
			</div>
		</div>
		<div class="col-12 col-md-3">
			<div class="form-group">
				<label class="control-label" for="cusAddrWeb">@Resources.Resource.Website</label>
				<input type="text" id="cusAddrWeb" name="cusAddrWeb" class="form-control" value="@Customer.cusAddrWeb" />
			</div>
		</div>
		<div class="col-12 col-md-3">
			<div class="form-group">
				<label for="cusPointsSoFar">@Resources.Resource.Points</label>
				<input type="number" id="cusPointsSoFar" name="cusPointsSoFar" class="form-control" value="@(Customer.cusPointsSoFar??0)" title="@Resources.Resource.Points" />
			</div>

		</div>
	</div>


	@for (int i = 1; i <= 4; i++)
	{
		string lbl = $"{Resources.Resource.Address}{i}";
		string _id = $"cusAddrStreetLine{i}";
		string streetline = edit ? Customer.StreetLines[i - 1] : "";
		<div class="form-group">
			<label class="control-label" for="">@lbl</label>
			<input type="text" id="@_id" class="form-control address" style="max-width:none;" maxlength="255" value="@streetline" />
		</div>
	}

	@if ((bool) Model.ComInfo.enableWhatsappLink)
	{
		<div class="row">

			<div class="col-12 col-md-4">
				<div class="form-group clearfix">
					<label class=" " for="cusAddrPhone1">@Resources.Resource.Phone 1</label>
					<input type="text" id="cusAddrPhone1" name="cusAddrPhone1" class="form-control mobile" value="@Customer.Phone1Display" />
					<span class="fa fa-whatsapp whatsappphone font-weight-bold pointer" data-phone="@Customer.cusAddrPhone1" style="color:#9f8ccf" title="WhatsApp"></span>
				</div>
			</div>


			<div class="col-12 col-md-4">
				<div class="form-group">
					<label class="control-label " for="cusAddrPhone2">@Resources.Resource.Phone 2</label>
					<input type="text" id="cusAddrPhone2" name="cusAddrPhone2" class="form-control mobile" value="@Customer.Phone2Display" />
					<span class="fa fa-whatsapp whatsappphone font-weight-bold pointer" data-phone="@Customer.cusAddrPhone2" style="color:#9f8ccf"></span>
				</div>
			</div>
			<div class="col-12 col-md-4">
				<div class="form-group">
					<label class="control-label " for="cusAddrPhone3">@Resources.Resource.Phone 3</label>
					<input type="text" id="cusAddrPhone3" name="cusAddrPhone3" class="form-control mobile" value="@Customer.Phone3Display" />
					<span class="fa fa-whatsapp whatsappphone font-weight-bold pointer" data-phone="@Customer.cusAddrPhone3" style="color:#9f8ccf" title="WhatsApp"></span>
				</div>
			</div>
		</div>
	}

	@{ _checked = edit && Customer.IsLastSellingPrice != null && (bool)Customer.IsLastSellingPrice ? "checked" : "";}


	<div class="form-group">
		<div class="form-check">
			<input class="form-check-input" type="checkbox" id="IsLastSellingPrice" value="1" @_checked>
			<label class="form-check-label font-weight-bold" for="IsLastSellingPrice">@Resources.Resource.LastSellingPrice</label>
		</div>
	</div>

	@if (edit)
	{
		<button type="button" class="btn btn-warning" id="btnFile">@Resources.Resource.UploadFile</button>
		<button type="button" class="btn btn-primary ml-2 hide" id="btnViewFile">@Resources.Resource.ViewFile</button>

		<link rel="stylesheet" type="text/css" href="~/Content/customer/attr/globalattribute.css?v=@rand" />
		<div id="globalattr" class="my-4">
			@Html.Partial("_GlobalAttributes", Customer.GlobalAttributeList, new ViewDataDictionary { { "CustomAttributeList", Customer.CustomAttributeList } })
			@Html.Partial("_DropDownModal", null, new ViewDataDictionary { { "cls", "default" } })
			@Html.Partial("_GComboModal")
		</div>

		var _needchecked = Customer.FollowUpDateInfo == null ? "checked" : Customer.FollowUpDateInfo.status == CusFollowUpStatus.need.ToString() ? "checked" : "";
		var _noneedchecked = Customer.FollowUpDateInfo == null ? "" : Customer.FollowUpDateInfo.status == CusFollowUpStatus.noneed.ToString() ? "checked" : "";
		var _completechecked = Customer.FollowUpDateInfo == null ? "" : Customer.FollowUpDateInfo.status == CusFollowUpStatus.completed.ToString() ? "checked" : "";

		<div class="form-group">
			<label class="mr-4">@string.Format(Resources.Resource.FollowUpFormat, Resources.Resource.Status)</label>
			<div class="form-check form-check-inline small">
				<input class="form-check-input followup" type="radio" name="followup" id="radNeed" value="@CusFollowUpStatus.need.ToString()" @_needchecked>
				<label class="form-check-label" for="radNeed">@Resources.Resource.NeedFollowUp</label>
			</div>
			<div class="form-check form-check-inline small">
				<input class="form-check-input followup" type="radio" name="followup" id="radNoNeed" value="@CusFollowUpStatus.noneed.ToString()" @_noneedchecked>
				<label class="form-check-label" for="radNoNeed">@Resources.Resource.NoNeedFollowUp</label>
			</div>
			<div class="form-check form-check-inline small">
				<input class="form-check-input followup" type="radio" name="followup" id="radCompleted" value="@CusFollowUpStatus.completed.ToString()" @_completechecked>
				<label class="form-check-label" for="radCompleted">@Resources.Resource.Completed</label>
			</div>
		</div>

		<div class="form-group">
			<label class="control-label">@string.Format(Resources.Resource.DateFormat, Resources.Resource.FollowUp)</label>
			<input type="datetime" class="form-control datepicker" id="followUpDate" />			
			<input type="hidden" id="followUpInfoId" name="followUpInfoId" value="@(Customer.FollowUpDateInfo==null?0: Customer.FollowUpDateInfo.Id)" />
			<input type="hidden" id="FollowUpDateInfo_followUpDate" value="@(Customer.FollowUpDateInfo==null?null: Customer.FollowUpDateInfo.followUpDate)" />
			<input type="hidden" id="FollowUpDateInfo_FollowUpDateDisplay" value="@(Customer.FollowUpDateInfo==null?"": Customer.FollowUpDateInfo.FollowUpDateDisplay)" />
		
		</div>


		<div id="followupRecordBlk" class="form-group">
			<label>@string.Format(Resources.Resource.RecordsFormat, Resources.Resource.FollowUp) <span id="addRecord" class="fa fa-plus small text-primary pointer"></span></label>
			<div class="row">
				@if (Customer.FollowUpRecordList != null && Customer.FollowUpRecordList.Count > 0)
				{
					foreach (var record in Customer.FollowUpRecordList)
					{
						@Html.Partial("_FollowUpBlk", null, new ViewDataDictionary { { "record", record }, { "displayclss", "col-12 col-sm-4 mb-1" } })
					}
				}

				<div class="displayblk template col-12 col-sm-4 mb-1 hide">
					<div class="card">
						<div class="text-right small"><span class="fa fa-edit text-info record pointer mr-2"></span><span class="fa fa-close text-danger record pointer"></span></div>
						<div class="card-body">
							<div class="txtarea">
								<p class="recorddisplay"></p>
								<input type="text" class="form-control recordentry hide" data-record="" onchange="handleRecordChange(this);" />
								<span class="small d-inline-block lastedited">@Resources.Resource.LastEditedByFormat</span>
							</div>
						</div>
					</div>
				</div>

				<div class="recordblk col-12 col-sm-4 hide" data-cuscode="@Customer.cusCode" data-cusid="@Customer.cusCustomerID">
					<div class="card">
						<div class="card-body">
							<div class="txtarea">
								<textarea class="form-control record" name="CustomerInfo_followUpRecord" rows="5" cols="30"></textarea>
							</div>
							<div class="buttons">
								<button type="button" class="btn btn-secondary saverecord" data-cuscode="@Customer.cusCode" data-cusid="@Customer.cusCustomerID"><span class="small">@Resources.Resource.Confirm</span></button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		string chkunsubscribe = Customer.cusUnsubscribe != null && (bool)Customer.cusUnsubscribe ? "checked" : "";
		<div class="form-check" data-checked="@chkunsubscribe">
			<input class="form-check-input" type="checkbox" value="0" id="chkUnSubscribe" @chkunsubscribe>
			<label class="form-check-label" for="chkUnSubscribe">
				@Resources.Resource.UnSubscribeFrmEblast
			</label>
		</div>
	}

	<button type="button" id="btnEdit" class="btn btn-success mr-2 my-4">@Resources.Resource.Save</button>
	<input type="hidden" id="codeinuse" value="@Customer.cusCode" />
	<input type="hidden" id="phoneinuse" value="@Customer.cusPhone" />
	<input type="hidden" id="enqEmail" name="enqEmail" value="@Customer.cusEmail" />
</div>
}

<div>
    @Html.ActionLink(Resources.Resource.BackToList, "Index")
</div>

@Html.Partial("_WaitingModal")

@Html.AntiForgeryToken()

@{
    string UploadSizeLimitMB = ConfigurationManager.AppSettings["MaxUploadSize"];
    string exceeduploadfilelimittxt = string.Format(Resources.Resource.ExceedUploadSizeLimitWarning, UploadSizeLimitMB);
    string gattrnamelist = Customer.GlobalAttributeList != null && Customer.GlobalAttributeList.Count > 0 ? string.Join(",", Customer.GlobalAttributeList.Select(x => x.attrName).ToHashSet()) : "";    
}

<div id="infoblk" data-cusid="@Customer.cusCustomerID" data-phonenameemaillist="@JsonSerializer.Serialize(Model.PhoneNameEmailList)" data-customernamerequired="@Resources.Resource.CustomerNameRequired" data-customerphonerequired="@Resources.Resource.CustomerPhoneRequired" data-customerphoneduplicatederr="@Resources.Resource.CustomerPhoneDuplicatedErr" data-returnurl="Customer/Edit" data-edit="@edit" data-followupdaterequired="@Resources.Resource.FollowUpDateRequired" data-customerid="@Customer.cusCustomerID" data-apid="@Customer.AccountProfileId" data-maxconamelength="@ConfigurationManager.AppSettings["MaxCoNameLength"]" data-contactrequired="@Resources.Resource.ContactRequired" data-duplicatedemailalert="@Resources.Resource.DuplicatedEmailAlert" data-ipcountry="@Customer.IpCountry" data-selectatleastoneitemtxt="@Resources.Resource.SelectAtLeastOneItemRequired" data-firstnamerequired="@Resources.Resource.FirstNameRequired" data-plsenteralldropdownattrvals="@plsentertxt" data-enablecrm="@Model.enableCRM" data-formaterrwarning="@Resources.Resource.FormatErrWarning" data-salecommentrequiredtxt="@string.Format(Resources.Resource.Required, Resources.Resource.SaleComment)" data-entercustomnamefirsttxt="@string.Format(Resources.Resource.EnterFirstFormat, string.Format(Resources.Resource.NameFormat,Resources.Resource.CustomField))" data-savedtxt="@string.Format(Resources.Resource.Saved,Resources.Resource.Attribute)" data-enteratleasttxt="@enteratleasttxt" data-enterattribtefirsttxt="@string.Format(Resources.Resource.EnterFirstFormat, string.Format(Resources.Resource.NameFormat,Resources.Resource.Attribute))" data-customfieldvaltxt="@string.Format(Resources.Resource.ValueFormat,Resources.Resource.CustomField)" data-uploadurl="/Customer/UploadFile" data-exceeduploadfilelimittxt="@exceeduploadfilelimittxt" data-uploadfilelist="@string.Join(",",Customer.UploadFileList)" data-uploadsizelimit="@ConfigurationManager.AppSettings["MaxUploadSizeBytes"]" data-uploadsizelimitmb="@ConfigurationManager.AppSettings["MaxUploadSize"]" data-jscustomattributelist="@JsonSerializer.Serialize(Customer.CustomAttributeList)" data-gattrnamelist="@gattrnamelist" data-jscustomerinfo="@JsonSerializer.Serialize(Customer.CustomerInfoList)" data-referrer="@Model.Referrer" data-lang="@CultureHelper.CurrentCulture"></div>


<script src="~/Scripts/ts/js/customer/edit.js?v=@rand"></script>
<script src="~/Scripts/ts/js/customer/attributes/globalattribute.js?v=@rand"></script>

@Html.Partial("_UploadFileModal", null, new ViewDataDictionary { { "uploadUrl", "/Customer/UploadFile" } })
@Html.Partial("_ViewFileModal", null, new ViewDataDictionary { { "imglist", Customer.ImgList }, { "filelist", Customer.FileList },{"FuncType", FuncType.Customer } })
